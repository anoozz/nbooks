//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace NBooks.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet : global::System.Data.DataSet {
        
        private customersDataTable tablecustomers;
        
        private vendorsDataTable tablevendors;
        
        private companyDataTable tablecompany;
        
        private accountsDataTable tableaccounts;
        
        private itemsDataTable tableitems;
        
        private invoicesDataTable tableinvoices;
        
        private termsDataTable tableterms;
        
        private employeesDataTable tableemployees;
        
        private purchase_ordersDataTable tablepurchase_orders;
        
        private other_namesDataTable tableother_names;
        
        private payroll_itemsDataTable tablepayroll_items;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["customers"] != null)) {
                    base.Tables.Add(new customersDataTable(ds.Tables["customers"]));
                }
                if ((ds.Tables["vendors"] != null)) {
                    base.Tables.Add(new vendorsDataTable(ds.Tables["vendors"]));
                }
                if ((ds.Tables["company"] != null)) {
                    base.Tables.Add(new companyDataTable(ds.Tables["company"]));
                }
                if ((ds.Tables["accounts"] != null)) {
                    base.Tables.Add(new accountsDataTable(ds.Tables["accounts"]));
                }
                if ((ds.Tables["items"] != null)) {
                    base.Tables.Add(new itemsDataTable(ds.Tables["items"]));
                }
                if ((ds.Tables["invoices"] != null)) {
                    base.Tables.Add(new invoicesDataTable(ds.Tables["invoices"]));
                }
                if ((ds.Tables["terms"] != null)) {
                    base.Tables.Add(new termsDataTable(ds.Tables["terms"]));
                }
                if ((ds.Tables["employees"] != null)) {
                    base.Tables.Add(new employeesDataTable(ds.Tables["employees"]));
                }
                if ((ds.Tables["purchase_orders"] != null)) {
                    base.Tables.Add(new purchase_ordersDataTable(ds.Tables["purchase_orders"]));
                }
                if ((ds.Tables["other_names"] != null)) {
                    base.Tables.Add(new other_namesDataTable(ds.Tables["other_names"]));
                }
                if ((ds.Tables["payroll_items"] != null)) {
                    base.Tables.Add(new payroll_itemsDataTable(ds.Tables["payroll_items"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public customersDataTable customers {
            get {
                return this.tablecustomers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public vendorsDataTable vendors {
            get {
                return this.tablevendors;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public companyDataTable company {
            get {
                return this.tablecompany;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public accountsDataTable accounts {
            get {
                return this.tableaccounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public itemsDataTable items {
            get {
                return this.tableitems;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public invoicesDataTable invoices {
            get {
                return this.tableinvoices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public termsDataTable terms {
            get {
                return this.tableterms;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public employeesDataTable employees {
            get {
                return this.tableemployees;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public purchase_ordersDataTable purchase_orders {
            get {
                return this.tablepurchase_orders;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public other_namesDataTable other_names {
            get {
                return this.tableother_names;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public payroll_itemsDataTable payroll_items {
            get {
                return this.tablepayroll_items;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet cln = ((DataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["customers"] != null)) {
                    base.Tables.Add(new customersDataTable(ds.Tables["customers"]));
                }
                if ((ds.Tables["vendors"] != null)) {
                    base.Tables.Add(new vendorsDataTable(ds.Tables["vendors"]));
                }
                if ((ds.Tables["company"] != null)) {
                    base.Tables.Add(new companyDataTable(ds.Tables["company"]));
                }
                if ((ds.Tables["accounts"] != null)) {
                    base.Tables.Add(new accountsDataTable(ds.Tables["accounts"]));
                }
                if ((ds.Tables["items"] != null)) {
                    base.Tables.Add(new itemsDataTable(ds.Tables["items"]));
                }
                if ((ds.Tables["invoices"] != null)) {
                    base.Tables.Add(new invoicesDataTable(ds.Tables["invoices"]));
                }
                if ((ds.Tables["terms"] != null)) {
                    base.Tables.Add(new termsDataTable(ds.Tables["terms"]));
                }
                if ((ds.Tables["employees"] != null)) {
                    base.Tables.Add(new employeesDataTable(ds.Tables["employees"]));
                }
                if ((ds.Tables["purchase_orders"] != null)) {
                    base.Tables.Add(new purchase_ordersDataTable(ds.Tables["purchase_orders"]));
                }
                if ((ds.Tables["other_names"] != null)) {
                    base.Tables.Add(new other_namesDataTable(ds.Tables["other_names"]));
                }
                if ((ds.Tables["payroll_items"] != null)) {
                    base.Tables.Add(new payroll_itemsDataTable(ds.Tables["payroll_items"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablecustomers = ((customersDataTable)(base.Tables["customers"]));
            if ((initTable == true)) {
                if ((this.tablecustomers != null)) {
                    this.tablecustomers.InitVars();
                }
            }
            this.tablevendors = ((vendorsDataTable)(base.Tables["vendors"]));
            if ((initTable == true)) {
                if ((this.tablevendors != null)) {
                    this.tablevendors.InitVars();
                }
            }
            this.tablecompany = ((companyDataTable)(base.Tables["company"]));
            if ((initTable == true)) {
                if ((this.tablecompany != null)) {
                    this.tablecompany.InitVars();
                }
            }
            this.tableaccounts = ((accountsDataTable)(base.Tables["accounts"]));
            if ((initTable == true)) {
                if ((this.tableaccounts != null)) {
                    this.tableaccounts.InitVars();
                }
            }
            this.tableitems = ((itemsDataTable)(base.Tables["items"]));
            if ((initTable == true)) {
                if ((this.tableitems != null)) {
                    this.tableitems.InitVars();
                }
            }
            this.tableinvoices = ((invoicesDataTable)(base.Tables["invoices"]));
            if ((initTable == true)) {
                if ((this.tableinvoices != null)) {
                    this.tableinvoices.InitVars();
                }
            }
            this.tableterms = ((termsDataTable)(base.Tables["terms"]));
            if ((initTable == true)) {
                if ((this.tableterms != null)) {
                    this.tableterms.InitVars();
                }
            }
            this.tableemployees = ((employeesDataTable)(base.Tables["employees"]));
            if ((initTable == true)) {
                if ((this.tableemployees != null)) {
                    this.tableemployees.InitVars();
                }
            }
            this.tablepurchase_orders = ((purchase_ordersDataTable)(base.Tables["purchase_orders"]));
            if ((initTable == true)) {
                if ((this.tablepurchase_orders != null)) {
                    this.tablepurchase_orders.InitVars();
                }
            }
            this.tableother_names = ((other_namesDataTable)(base.Tables["other_names"]));
            if ((initTable == true)) {
                if ((this.tableother_names != null)) {
                    this.tableother_names.InitVars();
                }
            }
            this.tablepayroll_items = ((payroll_itemsDataTable)(base.Tables["payroll_items"]));
            if ((initTable == true)) {
                if ((this.tablepayroll_items != null)) {
                    this.tablepayroll_items.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablecustomers = new customersDataTable();
            base.Tables.Add(this.tablecustomers);
            this.tablevendors = new vendorsDataTable();
            base.Tables.Add(this.tablevendors);
            this.tablecompany = new companyDataTable();
            base.Tables.Add(this.tablecompany);
            this.tableaccounts = new accountsDataTable();
            base.Tables.Add(this.tableaccounts);
            this.tableitems = new itemsDataTable();
            base.Tables.Add(this.tableitems);
            this.tableinvoices = new invoicesDataTable();
            base.Tables.Add(this.tableinvoices);
            this.tableterms = new termsDataTable();
            base.Tables.Add(this.tableterms);
            this.tableemployees = new employeesDataTable();
            base.Tables.Add(this.tableemployees);
            this.tablepurchase_orders = new purchase_ordersDataTable();
            base.Tables.Add(this.tablepurchase_orders);
            this.tableother_names = new other_namesDataTable();
            base.Tables.Add(this.tableother_names);
            this.tablepayroll_items = new payroll_itemsDataTable();
            base.Tables.Add(this.tablepayroll_items);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecustomers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializevendors() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializecompany() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeaccounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeitems() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeinvoices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeterms() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeemployees() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepurchase_orders() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeother_names() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializepayroll_items() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet ds = new DataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void customersRowChangeEventHandler(object sender, customersRowChangeEvent e);
        
        public delegate void vendorsRowChangeEventHandler(object sender, vendorsRowChangeEvent e);
        
        public delegate void companyRowChangeEventHandler(object sender, companyRowChangeEvent e);
        
        public delegate void accountsRowChangeEventHandler(object sender, accountsRowChangeEvent e);
        
        public delegate void itemsRowChangeEventHandler(object sender, itemsRowChangeEvent e);
        
        public delegate void invoicesRowChangeEventHandler(object sender, invoicesRowChangeEvent e);
        
        public delegate void termsRowChangeEventHandler(object sender, termsRowChangeEvent e);
        
        public delegate void employeesRowChangeEventHandler(object sender, employeesRowChangeEvent e);
        
        public delegate void purchase_ordersRowChangeEventHandler(object sender, purchase_ordersRowChangeEvent e);
        
        public delegate void other_namesRowChangeEventHandler(object sender, other_namesRowChangeEvent e);
        
        public delegate void payroll_itemsRowChangeEventHandler(object sender, payroll_itemsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class customersDataTable : global::System.Data.TypedTableBase<customersRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columntrade_assistance;
            
            private global::System.Data.DataColumn columnclassification;
            
            private global::System.Data.DataColumn columntype_of_deal;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columninactive;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columnbalance_as_of;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columnmiddle_name;
            
            private global::System.Data.DataColumn columnship_to_address;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnalt_phone;
            
            private global::System.Data.DataColumn columnalt_contact;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columncc;
            
            private global::System.Data.DataColumn columncustomer_type_id;
            
            private global::System.Data.DataColumn columnterms_id;
            
            private global::System.Data.DataColumn columnsales_rep_id;
            
            private global::System.Data.DataColumn columnsend_method;
            
            private global::System.Data.DataColumn columnsales_tax_code_id;
            
            private global::System.Data.DataColumn columntax_item_id;
            
            private global::System.Data.DataColumn columnresale_number;
            
            private global::System.Data.DataColumn columnprice_level_id;
            
            private global::System.Data.DataColumn columnaccount_no;
            
            private global::System.Data.DataColumn columncredit_limit;
            
            private global::System.Data.DataColumn columnpayment_method_id;
            
            private global::System.Data.DataColumn columncredit_card_no;
            
            private global::System.Data.DataColumn columncc_expiry_month;
            
            private global::System.Data.DataColumn columncc_expiry_year;
            
            private global::System.Data.DataColumn columnname_on_card;
            
            private global::System.Data.DataColumn columncc_address;
            
            private global::System.Data.DataColumn columncc_zip_code;
            
            private global::System.Data.DataColumn columnjob_status;
            
            private global::System.Data.DataColumn columnstart_date;
            
            private global::System.Data.DataColumn columnprojected_end;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnjob_description;
            
            private global::System.Data.DataColumn columnjob_type_id;
            
            private global::System.Data.DataColumn columnnotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public customersDataTable() {
                this.TableName = "customers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal customersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected customersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn trade_assistanceColumn {
                get {
                    return this.columntrade_assistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classificationColumn {
                get {
                    return this.columnclassification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn type_of_dealColumn {
                get {
                    return this.columntype_of_deal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balance_as_ofColumn {
                get {
                    return this.columnbalance_as_of;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn middle_nameColumn {
                get {
                    return this.columnmiddle_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ship_to_addressColumn {
                get {
                    return this.columnship_to_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alt_phoneColumn {
                get {
                    return this.columnalt_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alt_contactColumn {
                get {
                    return this.columnalt_contact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ccColumn {
                get {
                    return this.columncc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customer_type_idColumn {
                get {
                    return this.columncustomer_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn terms_idColumn {
                get {
                    return this.columnterms_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_rep_idColumn {
                get {
                    return this.columnsales_rep_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn send_methodColumn {
                get {
                    return this.columnsend_method;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_tax_code_idColumn {
                get {
                    return this.columnsales_tax_code_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tax_item_idColumn {
                get {
                    return this.columntax_item_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn resale_numberColumn {
                get {
                    return this.columnresale_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn price_level_idColumn {
                get {
                    return this.columnprice_level_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_noColumn {
                get {
                    return this.columnaccount_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn credit_limitColumn {
                get {
                    return this.columncredit_limit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn payment_method_idColumn {
                get {
                    return this.columnpayment_method_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn credit_card_noColumn {
                get {
                    return this.columncredit_card_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cc_expiry_monthColumn {
                get {
                    return this.columncc_expiry_month;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cc_expiry_yearColumn {
                get {
                    return this.columncc_expiry_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_on_cardColumn {
                get {
                    return this.columnname_on_card;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cc_addressColumn {
                get {
                    return this.columncc_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cc_zip_codeColumn {
                get {
                    return this.columncc_zip_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn job_statusColumn {
                get {
                    return this.columnjob_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn start_dateColumn {
                get {
                    return this.columnstart_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn projected_endColumn {
                get {
                    return this.columnprojected_end;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn job_descriptionColumn {
                get {
                    return this.columnjob_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn job_type_idColumn {
                get {
                    return this.columnjob_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn notesColumn {
                get {
                    return this.columnnotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public customersRow this[int index] {
                get {
                    return ((customersRow)(this.Rows[index]));
                }
            }
            
            public event customersRowChangeEventHandler customersRowChanging;
            
            public event customersRowChangeEventHandler customersRowChanged;
            
            public event customersRowChangeEventHandler customersRowDeleting;
            
            public event customersRowChangeEventHandler customersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcustomersRow(customersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public customersRow AddcustomersRow(
                        string name, 
                        string address, 
                        string phone, 
                        string trade_assistance, 
                        string classification, 
                        string type_of_deal, 
                        double balance, 
                        short inactive, 
                        string company_name, 
                        System.DateTime balance_as_of, 
                        string title, 
                        string first_name, 
                        string last_name, 
                        string middle_name, 
                        string ship_to_address, 
                        string contact, 
                        string fax, 
                        string alt_phone, 
                        string alt_contact, 
                        string email, 
                        string cc, 
                        int customer_type_id, 
                        int terms_id, 
                        int sales_rep_id, 
                        short send_method, 
                        int sales_tax_code_id, 
                        int tax_item_id, 
                        string resale_number, 
                        int price_level_id, 
                        string account_no, 
                        double credit_limit, 
                        int payment_method_id, 
                        string credit_card_no, 
                        string cc_expiry_month, 
                        string cc_expiry_year, 
                        string name_on_card, 
                        string cc_address, 
                        string cc_zip_code, 
                        short job_status, 
                        System.DateTime start_date, 
                        System.DateTime projected_end, 
                        System.DateTime end_date, 
                        string job_description, 
                        int job_type_id, 
                        string notes) {
                customersRow rowcustomersRow = ((customersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        address,
                        phone,
                        trade_assistance,
                        classification,
                        type_of_deal,
                        balance,
                        inactive,
                        company_name,
                        balance_as_of,
                        title,
                        first_name,
                        last_name,
                        middle_name,
                        ship_to_address,
                        contact,
                        fax,
                        alt_phone,
                        alt_contact,
                        email,
                        cc,
                        customer_type_id,
                        terms_id,
                        sales_rep_id,
                        send_method,
                        sales_tax_code_id,
                        tax_item_id,
                        resale_number,
                        price_level_id,
                        account_no,
                        credit_limit,
                        payment_method_id,
                        credit_card_no,
                        cc_expiry_month,
                        cc_expiry_year,
                        name_on_card,
                        cc_address,
                        cc_zip_code,
                        job_status,
                        start_date,
                        projected_end,
                        end_date,
                        job_description,
                        job_type_id,
                        notes};
                rowcustomersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcustomersRow);
                return rowcustomersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                customersDataTable cln = ((customersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new customersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columnaddress = base.Columns["address"];
                this.columnphone = base.Columns["phone"];
                this.columntrade_assistance = base.Columns["trade_assistance"];
                this.columnclassification = base.Columns["classification"];
                this.columntype_of_deal = base.Columns["type_of_deal"];
                this.columnbalance = base.Columns["balance"];
                this.columninactive = base.Columns["inactive"];
                this.columncompany_name = base.Columns["company_name"];
                this.columnbalance_as_of = base.Columns["balance_as_of"];
                this.columntitle = base.Columns["title"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnlast_name = base.Columns["last_name"];
                this.columnmiddle_name = base.Columns["middle_name"];
                this.columnship_to_address = base.Columns["ship_to_address"];
                this.columncontact = base.Columns["contact"];
                this.columnfax = base.Columns["fax"];
                this.columnalt_phone = base.Columns["alt_phone"];
                this.columnalt_contact = base.Columns["alt_contact"];
                this.columnemail = base.Columns["email"];
                this.columncc = base.Columns["cc"];
                this.columncustomer_type_id = base.Columns["customer_type_id"];
                this.columnterms_id = base.Columns["terms_id"];
                this.columnsales_rep_id = base.Columns["sales_rep_id"];
                this.columnsend_method = base.Columns["send_method"];
                this.columnsales_tax_code_id = base.Columns["sales_tax_code_id"];
                this.columntax_item_id = base.Columns["tax_item_id"];
                this.columnresale_number = base.Columns["resale_number"];
                this.columnprice_level_id = base.Columns["price_level_id"];
                this.columnaccount_no = base.Columns["account_no"];
                this.columncredit_limit = base.Columns["credit_limit"];
                this.columnpayment_method_id = base.Columns["payment_method_id"];
                this.columncredit_card_no = base.Columns["credit_card_no"];
                this.columncc_expiry_month = base.Columns["cc_expiry_month"];
                this.columncc_expiry_year = base.Columns["cc_expiry_year"];
                this.columnname_on_card = base.Columns["name_on_card"];
                this.columncc_address = base.Columns["cc_address"];
                this.columncc_zip_code = base.Columns["cc_zip_code"];
                this.columnjob_status = base.Columns["job_status"];
                this.columnstart_date = base.Columns["start_date"];
                this.columnprojected_end = base.Columns["projected_end"];
                this.columnend_date = base.Columns["end_date"];
                this.columnjob_description = base.Columns["job_description"];
                this.columnjob_type_id = base.Columns["job_type_id"];
                this.columnnotes = base.Columns["notes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columntrade_assistance = new global::System.Data.DataColumn("trade_assistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntrade_assistance);
                this.columnclassification = new global::System.Data.DataColumn("classification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclassification);
                this.columntype_of_deal = new global::System.Data.DataColumn("type_of_deal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype_of_deal);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columnbalance_as_of = new global::System.Data.DataColumn("balance_as_of", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance_as_of);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columnmiddle_name = new global::System.Data.DataColumn("middle_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddle_name);
                this.columnship_to_address = new global::System.Data.DataColumn("ship_to_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnship_to_address);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnalt_phone = new global::System.Data.DataColumn("alt_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalt_phone);
                this.columnalt_contact = new global::System.Data.DataColumn("alt_contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalt_contact);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columncc = new global::System.Data.DataColumn("cc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncc);
                this.columncustomer_type_id = new global::System.Data.DataColumn("customer_type_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer_type_id);
                this.columnterms_id = new global::System.Data.DataColumn("terms_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterms_id);
                this.columnsales_rep_id = new global::System.Data.DataColumn("sales_rep_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_rep_id);
                this.columnsend_method = new global::System.Data.DataColumn("send_method", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsend_method);
                this.columnsales_tax_code_id = new global::System.Data.DataColumn("sales_tax_code_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_tax_code_id);
                this.columntax_item_id = new global::System.Data.DataColumn("tax_item_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax_item_id);
                this.columnresale_number = new global::System.Data.DataColumn("resale_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnresale_number);
                this.columnprice_level_id = new global::System.Data.DataColumn("price_level_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprice_level_id);
                this.columnaccount_no = new global::System.Data.DataColumn("account_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_no);
                this.columncredit_limit = new global::System.Data.DataColumn("credit_limit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit_limit);
                this.columnpayment_method_id = new global::System.Data.DataColumn("payment_method_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_method_id);
                this.columncredit_card_no = new global::System.Data.DataColumn("credit_card_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncredit_card_no);
                this.columncc_expiry_month = new global::System.Data.DataColumn("cc_expiry_month", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_expiry_month);
                this.columncc_expiry_year = new global::System.Data.DataColumn("cc_expiry_year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_expiry_year);
                this.columnname_on_card = new global::System.Data.DataColumn("name_on_card", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_on_card);
                this.columncc_address = new global::System.Data.DataColumn("cc_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_address);
                this.columncc_zip_code = new global::System.Data.DataColumn("cc_zip_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncc_zip_code);
                this.columnjob_status = new global::System.Data.DataColumn("job_status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjob_status);
                this.columnstart_date = new global::System.Data.DataColumn("start_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstart_date);
                this.columnprojected_end = new global::System.Data.DataColumn("projected_end", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprojected_end);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnjob_description = new global::System.Data.DataColumn("job_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjob_description);
                this.columnjob_type_id = new global::System.Data.DataColumn("job_type_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjob_type_id);
                this.columnnotes = new global::System.Data.DataColumn("notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnotes);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public customersRow NewcustomersRow() {
                return ((customersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new customersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(customersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.customersRowChanged != null)) {
                    this.customersRowChanged(this, new customersRowChangeEvent(((customersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.customersRowChanging != null)) {
                    this.customersRowChanging(this, new customersRowChangeEvent(((customersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.customersRowDeleted != null)) {
                    this.customersRowDeleted(this, new customersRowChangeEvent(((customersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.customersRowDeleting != null)) {
                    this.customersRowDeleting(this, new customersRowChangeEvent(((customersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecustomersRow(customersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "customersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class vendorsDataTable : global::System.Data.TypedTableBase<vendorsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columninactive;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columncontact;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendorsDataTable() {
                this.TableName = "vendors";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendorsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected vendorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendorsRow this[int index] {
                get {
                    return ((vendorsRow)(this.Rows[index]));
                }
            }
            
            public event vendorsRowChangeEventHandler vendorsRowChanging;
            
            public event vendorsRowChangeEventHandler vendorsRowChanged;
            
            public event vendorsRowChangeEventHandler vendorsRowDeleting;
            
            public event vendorsRowChangeEventHandler vendorsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddvendorsRow(vendorsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendorsRow AddvendorsRow(string name, string address, string phone, short inactive, double balance, string contact) {
                vendorsRow rowvendorsRow = ((vendorsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        address,
                        phone,
                        inactive,
                        balance,
                        contact};
                rowvendorsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowvendorsRow);
                return rowvendorsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                vendorsDataTable cln = ((vendorsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new vendorsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columnaddress = base.Columns["address"];
                this.columnphone = base.Columns["phone"];
                this.columninactive = base.Columns["inactive"];
                this.columnbalance = base.Columns["balance"];
                this.columncontact = base.Columns["contact"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendorsRow NewvendorsRow() {
                return ((vendorsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new vendorsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(vendorsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.vendorsRowChanged != null)) {
                    this.vendorsRowChanged(this, new vendorsRowChangeEvent(((vendorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.vendorsRowChanging != null)) {
                    this.vendorsRowChanging(this, new vendorsRowChangeEvent(((vendorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.vendorsRowDeleted != null)) {
                    this.vendorsRowDeleted(this, new vendorsRowChangeEvent(((vendorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.vendorsRowDeleting != null)) {
                    this.vendorsRowDeleting(this, new vendorsRowChangeEvent(((vendorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovevendorsRow(vendorsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "vendorsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class companyDataTable : global::System.Data.TypedTableBase<companyRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnship_to_name;
            
            private global::System.Data.DataColumn columnship_to_address;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnwebsite;
            
            private global::System.Data.DataColumn columnlegal_name;
            
            private global::System.Data.DataColumn columnlegal_address;
            
            private global::System.Data.DataColumn columnlegal_address1;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstate_id;
            
            private global::System.Data.DataColumn columnzip;
            
            private global::System.Data.DataColumn columnlegal_country_id;
            
            private global::System.Data.DataColumn columncountry_id;
            
            private global::System.Data.DataColumn columnfiscal_year;
            
            private global::System.Data.DataColumn columntax_year;
            
            private global::System.Data.DataColumn columnincome_tax_form;
            
            private global::System.Data.DataColumn columnein;
            
            private global::System.Data.DataColumn columnssn;
            
            private global::System.Data.DataColumn columnpayroll_contact;
            
            private global::System.Data.DataColumn columnpayroll_contact_title;
            
            private global::System.Data.DataColumn columnpayroll_contact_phone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public companyDataTable() {
                this.TableName = "company";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal companyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected companyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ship_to_nameColumn {
                get {
                    return this.columnship_to_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ship_to_addressColumn {
                get {
                    return this.columnship_to_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn websiteColumn {
                get {
                    return this.columnwebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn legal_nameColumn {
                get {
                    return this.columnlegal_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn legal_addressColumn {
                get {
                    return this.columnlegal_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn legal_address1Column {
                get {
                    return this.columnlegal_address1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn state_idColumn {
                get {
                    return this.columnstate_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zipColumn {
                get {
                    return this.columnzip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn legal_country_idColumn {
                get {
                    return this.columnlegal_country_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn country_idColumn {
                get {
                    return this.columncountry_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fiscal_yearColumn {
                get {
                    return this.columnfiscal_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tax_yearColumn {
                get {
                    return this.columntax_year;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn income_tax_formColumn {
                get {
                    return this.columnincome_tax_form;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn einColumn {
                get {
                    return this.columnein;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ssnColumn {
                get {
                    return this.columnssn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn payroll_contactColumn {
                get {
                    return this.columnpayroll_contact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn payroll_contact_titleColumn {
                get {
                    return this.columnpayroll_contact_title;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn payroll_contact_phoneColumn {
                get {
                    return this.columnpayroll_contact_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public companyRow this[int index] {
                get {
                    return ((companyRow)(this.Rows[index]));
                }
            }
            
            public event companyRowChangeEventHandler companyRowChanging;
            
            public event companyRowChangeEventHandler companyRowChanged;
            
            public event companyRowChangeEventHandler companyRowDeleting;
            
            public event companyRowChangeEventHandler companyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddcompanyRow(companyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public companyRow AddcompanyRow(
                        string name, 
                        string ship_to_name, 
                        string ship_to_address, 
                        string address, 
                        string phone, 
                        string fax, 
                        string email, 
                        string website, 
                        string legal_name, 
                        string legal_address, 
                        string legal_address1, 
                        string city, 
                        int state_id, 
                        string zip, 
                        int legal_country_id, 
                        int country_id, 
                        short fiscal_year, 
                        short tax_year, 
                        short income_tax_form, 
                        string ein, 
                        string ssn, 
                        string payroll_contact, 
                        string payroll_contact_title, 
                        string payroll_contact_phone) {
                companyRow rowcompanyRow = ((companyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        ship_to_name,
                        ship_to_address,
                        address,
                        phone,
                        fax,
                        email,
                        website,
                        legal_name,
                        legal_address,
                        legal_address1,
                        city,
                        state_id,
                        zip,
                        legal_country_id,
                        country_id,
                        fiscal_year,
                        tax_year,
                        income_tax_form,
                        ein,
                        ssn,
                        payroll_contact,
                        payroll_contact_title,
                        payroll_contact_phone};
                rowcompanyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcompanyRow);
                return rowcompanyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                companyDataTable cln = ((companyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new companyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columnship_to_name = base.Columns["ship_to_name"];
                this.columnship_to_address = base.Columns["ship_to_address"];
                this.columnaddress = base.Columns["address"];
                this.columnphone = base.Columns["phone"];
                this.columnfax = base.Columns["fax"];
                this.columnemail = base.Columns["email"];
                this.columnwebsite = base.Columns["website"];
                this.columnlegal_name = base.Columns["legal_name"];
                this.columnlegal_address = base.Columns["legal_address"];
                this.columnlegal_address1 = base.Columns["legal_address1"];
                this.columncity = base.Columns["city"];
                this.columnstate_id = base.Columns["state_id"];
                this.columnzip = base.Columns["zip"];
                this.columnlegal_country_id = base.Columns["legal_country_id"];
                this.columncountry_id = base.Columns["country_id"];
                this.columnfiscal_year = base.Columns["fiscal_year"];
                this.columntax_year = base.Columns["tax_year"];
                this.columnincome_tax_form = base.Columns["income_tax_form"];
                this.columnein = base.Columns["ein"];
                this.columnssn = base.Columns["ssn"];
                this.columnpayroll_contact = base.Columns["payroll_contact"];
                this.columnpayroll_contact_title = base.Columns["payroll_contact_title"];
                this.columnpayroll_contact_phone = base.Columns["payroll_contact_phone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnship_to_name = new global::System.Data.DataColumn("ship_to_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnship_to_name);
                this.columnship_to_address = new global::System.Data.DataColumn("ship_to_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnship_to_address);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnwebsite = new global::System.Data.DataColumn("website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwebsite);
                this.columnlegal_name = new global::System.Data.DataColumn("legal_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlegal_name);
                this.columnlegal_address = new global::System.Data.DataColumn("legal_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlegal_address);
                this.columnlegal_address1 = new global::System.Data.DataColumn("legal_address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlegal_address1);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstate_id = new global::System.Data.DataColumn("state_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate_id);
                this.columnzip = new global::System.Data.DataColumn("zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzip);
                this.columnlegal_country_id = new global::System.Data.DataColumn("legal_country_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlegal_country_id);
                this.columncountry_id = new global::System.Data.DataColumn("country_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncountry_id);
                this.columnfiscal_year = new global::System.Data.DataColumn("fiscal_year", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfiscal_year);
                this.columntax_year = new global::System.Data.DataColumn("tax_year", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax_year);
                this.columnincome_tax_form = new global::System.Data.DataColumn("income_tax_form", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincome_tax_form);
                this.columnein = new global::System.Data.DataColumn("ein", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnein);
                this.columnssn = new global::System.Data.DataColumn("ssn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnssn);
                this.columnpayroll_contact = new global::System.Data.DataColumn("payroll_contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayroll_contact);
                this.columnpayroll_contact_title = new global::System.Data.DataColumn("payroll_contact_title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayroll_contact_title);
                this.columnpayroll_contact_phone = new global::System.Data.DataColumn("payroll_contact_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayroll_contact_phone);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public companyRow NewcompanyRow() {
                return ((companyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new companyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(companyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.companyRowChanged != null)) {
                    this.companyRowChanged(this, new companyRowChangeEvent(((companyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.companyRowChanging != null)) {
                    this.companyRowChanging(this, new companyRowChangeEvent(((companyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.companyRowDeleted != null)) {
                    this.companyRowDeleted(this, new companyRowChangeEvent(((companyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.companyRowDeleting != null)) {
                    this.companyRowDeleting(this, new companyRowChangeEvent(((companyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovecompanyRow(companyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "companyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class accountsDataTable : global::System.Data.TypedTableBase<accountsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnnote;
            
            private global::System.Data.DataColumn columnbalance;
            
            private global::System.Data.DataColumn columninactive;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columntax_line_mapping;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accountsDataTable() {
                this.TableName = "accounts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal accountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected accountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn balanceColumn {
                get {
                    return this.columnbalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tax_line_mappingColumn {
                get {
                    return this.columntax_line_mapping;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accountsRow this[int index] {
                get {
                    return ((accountsRow)(this.Rows[index]));
                }
            }
            
            public event accountsRowChangeEventHandler accountsRowChanging;
            
            public event accountsRowChangeEventHandler accountsRowChanged;
            
            public event accountsRowChangeEventHandler accountsRowDeleting;
            
            public event accountsRowChangeEventHandler accountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddaccountsRow(accountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accountsRow AddaccountsRow(string name, string description, string note, double balance, short inactive, short type, short tax_line_mapping) {
                accountsRow rowaccountsRow = ((accountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        description,
                        note,
                        balance,
                        inactive,
                        type,
                        tax_line_mapping};
                rowaccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowaccountsRow);
                return rowaccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                accountsDataTable cln = ((accountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new accountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columndescription = base.Columns["description"];
                this.columnnote = base.Columns["note"];
                this.columnbalance = base.Columns["balance"];
                this.columninactive = base.Columns["inactive"];
                this.columntype = base.Columns["type"];
                this.columntax_line_mapping = base.Columns["tax_line_mapping"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnnote = new global::System.Data.DataColumn("note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote);
                this.columnbalance = new global::System.Data.DataColumn("balance", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbalance);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.columntype = new global::System.Data.DataColumn("type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columntax_line_mapping = new global::System.Data.DataColumn("tax_line_mapping", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax_line_mapping);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accountsRow NewaccountsRow() {
                return ((accountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new accountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(accountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.accountsRowChanged != null)) {
                    this.accountsRowChanged(this, new accountsRowChangeEvent(((accountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.accountsRowChanging != null)) {
                    this.accountsRowChanging(this, new accountsRowChangeEvent(((accountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.accountsRowDeleted != null)) {
                    this.accountsRowDeleted(this, new accountsRowChangeEvent(((accountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.accountsRowDeleting != null)) {
                    this.accountsRowDeleting(this, new accountsRowChangeEvent(((accountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveaccountsRow(accountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "accountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class itemsDataTable : global::System.Data.TypedTableBase<itemsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnsales_description;
            
            private global::System.Data.DataColumn columnon_hand;
            
            private global::System.Data.DataColumn columnunit_measure;
            
            private global::System.Data.DataColumn columnsales_price;
            
            private global::System.Data.DataColumn columnreorder_point;
            
            private global::System.Data.DataColumn columnoverstock_level;
            
            private global::System.Data.DataColumn columnpart_number;
            
            private global::System.Data.DataColumn columnbeginning_qty;
            
            private global::System.Data.DataColumn columntolarge_packing;
            
            private global::System.Data.DataColumn columninactive;
            
            private global::System.Data.DataColumn columnucs;
            
            private global::System.Data.DataColumn columnpreferred_vendor_id;
            
            private global::System.Data.DataColumn columnvendor_discount;
            
            private global::System.Data.DataColumn columnpurchase_description;
            
            private global::System.Data.DataColumn columncost;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnunit_id;
            
            private global::System.Data.DataColumn columnincome_account_id;
            
            private global::System.Data.DataColumn columncogs_account_id;
            
            private global::System.Data.DataColumn columnsales_tax_code_id;
            
            private global::System.Data.DataColumn columnasset_account_id;
            
            private global::System.Data.DataColumn columntotal_value;
            
            private global::System.Data.DataColumn columnvalue_as_of;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itemsDataTable() {
                this.TableName = "items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal itemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected itemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_descriptionColumn {
                get {
                    return this.columnsales_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn on_handColumn {
                get {
                    return this.columnon_hand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unit_measureColumn {
                get {
                    return this.columnunit_measure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_priceColumn {
                get {
                    return this.columnsales_price;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reorder_pointColumn {
                get {
                    return this.columnreorder_point;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn overstock_levelColumn {
                get {
                    return this.columnoverstock_level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn part_numberColumn {
                get {
                    return this.columnpart_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn beginning_qtyColumn {
                get {
                    return this.columnbeginning_qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tolarge_packingColumn {
                get {
                    return this.columntolarge_packing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ucsColumn {
                get {
                    return this.columnucs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn preferred_vendor_idColumn {
                get {
                    return this.columnpreferred_vendor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vendor_discountColumn {
                get {
                    return this.columnvendor_discount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn purchase_descriptionColumn {
                get {
                    return this.columnpurchase_description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn costColumn {
                get {
                    return this.columncost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unit_idColumn {
                get {
                    return this.columnunit_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn income_account_idColumn {
                get {
                    return this.columnincome_account_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cogs_account_idColumn {
                get {
                    return this.columncogs_account_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_tax_code_idColumn {
                get {
                    return this.columnsales_tax_code_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn asset_account_idColumn {
                get {
                    return this.columnasset_account_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_valueColumn {
                get {
                    return this.columntotal_value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn value_as_ofColumn {
                get {
                    return this.columnvalue_as_of;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itemsRow this[int index] {
                get {
                    return ((itemsRow)(this.Rows[index]));
                }
            }
            
            public event itemsRowChangeEventHandler itemsRowChanging;
            
            public event itemsRowChangeEventHandler itemsRowChanged;
            
            public event itemsRowChangeEventHandler itemsRowDeleting;
            
            public event itemsRowChangeEventHandler itemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdditemsRow(itemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itemsRow AdditemsRow(
                        string name, 
                        string sales_description, 
                        double on_hand, 
                        string unit_measure, 
                        double sales_price, 
                        double reorder_point, 
                        double overstock_level, 
                        string part_number, 
                        double beginning_qty, 
                        double tolarge_packing, 
                        short inactive, 
                        double ucs, 
                        int preferred_vendor_id, 
                        double vendor_discount, 
                        string purchase_description, 
                        double cost, 
                        short type, 
                        int unit_id, 
                        int income_account_id, 
                        int cogs_account_id, 
                        int sales_tax_code_id, 
                        int asset_account_id, 
                        double total_value, 
                        System.DateTime value_as_of) {
                itemsRow rowitemsRow = ((itemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        sales_description,
                        on_hand,
                        unit_measure,
                        sales_price,
                        reorder_point,
                        overstock_level,
                        part_number,
                        beginning_qty,
                        tolarge_packing,
                        inactive,
                        ucs,
                        preferred_vendor_id,
                        vendor_discount,
                        purchase_description,
                        cost,
                        type,
                        unit_id,
                        income_account_id,
                        cogs_account_id,
                        sales_tax_code_id,
                        asset_account_id,
                        total_value,
                        value_as_of};
                rowitemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowitemsRow);
                return rowitemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                itemsDataTable cln = ((itemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new itemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columnsales_description = base.Columns["sales_description"];
                this.columnon_hand = base.Columns["on_hand"];
                this.columnunit_measure = base.Columns["unit_measure"];
                this.columnsales_price = base.Columns["sales_price"];
                this.columnreorder_point = base.Columns["reorder_point"];
                this.columnoverstock_level = base.Columns["overstock_level"];
                this.columnpart_number = base.Columns["part_number"];
                this.columnbeginning_qty = base.Columns["beginning_qty"];
                this.columntolarge_packing = base.Columns["tolarge_packing"];
                this.columninactive = base.Columns["inactive"];
                this.columnucs = base.Columns["ucs"];
                this.columnpreferred_vendor_id = base.Columns["preferred_vendor_id"];
                this.columnvendor_discount = base.Columns["vendor_discount"];
                this.columnpurchase_description = base.Columns["purchase_description"];
                this.columncost = base.Columns["cost"];
                this.columntype = base.Columns["type"];
                this.columnunit_id = base.Columns["unit_id"];
                this.columnincome_account_id = base.Columns["income_account_id"];
                this.columncogs_account_id = base.Columns["cogs_account_id"];
                this.columnsales_tax_code_id = base.Columns["sales_tax_code_id"];
                this.columnasset_account_id = base.Columns["asset_account_id"];
                this.columntotal_value = base.Columns["total_value"];
                this.columnvalue_as_of = base.Columns["value_as_of"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnsales_description = new global::System.Data.DataColumn("sales_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_description);
                this.columnon_hand = new global::System.Data.DataColumn("on_hand", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnon_hand);
                this.columnunit_measure = new global::System.Data.DataColumn("unit_measure", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunit_measure);
                this.columnsales_price = new global::System.Data.DataColumn("sales_price", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_price);
                this.columnreorder_point = new global::System.Data.DataColumn("reorder_point", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreorder_point);
                this.columnoverstock_level = new global::System.Data.DataColumn("overstock_level", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoverstock_level);
                this.columnpart_number = new global::System.Data.DataColumn("part_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpart_number);
                this.columnbeginning_qty = new global::System.Data.DataColumn("beginning_qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbeginning_qty);
                this.columntolarge_packing = new global::System.Data.DataColumn("tolarge_packing", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntolarge_packing);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.columnucs = new global::System.Data.DataColumn("ucs", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnucs);
                this.columnpreferred_vendor_id = new global::System.Data.DataColumn("preferred_vendor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreferred_vendor_id);
                this.columnvendor_discount = new global::System.Data.DataColumn("vendor_discount", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvendor_discount);
                this.columnpurchase_description = new global::System.Data.DataColumn("purchase_description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpurchase_description);
                this.columncost = new global::System.Data.DataColumn("cost", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost);
                this.columntype = new global::System.Data.DataColumn("type", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnunit_id = new global::System.Data.DataColumn("unit_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunit_id);
                this.columnincome_account_id = new global::System.Data.DataColumn("income_account_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnincome_account_id);
                this.columncogs_account_id = new global::System.Data.DataColumn("cogs_account_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncogs_account_id);
                this.columnsales_tax_code_id = new global::System.Data.DataColumn("sales_tax_code_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_tax_code_id);
                this.columnasset_account_id = new global::System.Data.DataColumn("asset_account_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasset_account_id);
                this.columntotal_value = new global::System.Data.DataColumn("total_value", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_value);
                this.columnvalue_as_of = new global::System.Data.DataColumn("value_as_of", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvalue_as_of);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itemsRow NewitemsRow() {
                return ((itemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new itemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(itemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.itemsRowChanged != null)) {
                    this.itemsRowChanged(this, new itemsRowChangeEvent(((itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.itemsRowChanging != null)) {
                    this.itemsRowChanging(this, new itemsRowChangeEvent(((itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.itemsRowDeleted != null)) {
                    this.itemsRowDeleted(this, new itemsRowChangeEvent(((itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.itemsRowDeleting != null)) {
                    this.itemsRowDeleting(this, new itemsRowChangeEvent(((itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveitemsRow(itemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "itemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class invoicesDataTable : global::System.Data.TypedTableBase<invoicesRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columncustomer_id;
            
            private global::System.Data.DataColumn columnref_no;
            
            private global::System.Data.DataColumn columnbill_to_address;
            
            private global::System.Data.DataColumn columnship_to_address;
            
            private global::System.Data.DataColumn columnpo_no;
            
            private global::System.Data.DataColumn columnterms_id;
            
            private global::System.Data.DataColumn columnsales_rep_id;
            
            private global::System.Data.DataColumn columnshipping_date;
            
            private global::System.Data.DataColumn columnshipping_method_id;
            
            private global::System.Data.DataColumn columnfob;
            
            private global::System.Data.DataColumn columncustomer_message_id;
            
            private global::System.Data.DataColumn columntax_item_id;
            
            private global::System.Data.DataColumn columnsales_tax_code_id;
            
            private global::System.Data.DataColumn columnmemo;
            
            private global::System.Data.DataColumn columncreated_by;
            
            private global::System.Data.DataColumn columncreation_date;
            
            private global::System.Data.DataColumn columnupdated_by;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnaccount_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public invoicesDataTable() {
                this.TableName = "invoices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal invoicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected invoicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customer_idColumn {
                get {
                    return this.columncustomer_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ref_noColumn {
                get {
                    return this.columnref_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bill_to_addressColumn {
                get {
                    return this.columnbill_to_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ship_to_addressColumn {
                get {
                    return this.columnship_to_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn po_noColumn {
                get {
                    return this.columnpo_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn terms_idColumn {
                get {
                    return this.columnterms_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_rep_idColumn {
                get {
                    return this.columnsales_rep_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shipping_dateColumn {
                get {
                    return this.columnshipping_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shipping_method_idColumn {
                get {
                    return this.columnshipping_method_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fobColumn {
                get {
                    return this.columnfob;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn customer_message_idColumn {
                get {
                    return this.columncustomer_message_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tax_item_idColumn {
                get {
                    return this.columntax_item_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_tax_code_idColumn {
                get {
                    return this.columnsales_tax_code_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn memoColumn {
                get {
                    return this.columnmemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn created_byColumn {
                get {
                    return this.columncreated_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn creation_dateColumn {
                get {
                    return this.columncreation_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updated_byColumn {
                get {
                    return this.columnupdated_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_idColumn {
                get {
                    return this.columnaccount_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public invoicesRow this[int index] {
                get {
                    return ((invoicesRow)(this.Rows[index]));
                }
            }
            
            public event invoicesRowChangeEventHandler invoicesRowChanging;
            
            public event invoicesRowChangeEventHandler invoicesRowChanged;
            
            public event invoicesRowChangeEventHandler invoicesRowDeleting;
            
            public event invoicesRowChangeEventHandler invoicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddinvoicesRow(invoicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public invoicesRow AddinvoicesRow(
                        System.DateTime date, 
                        int customer_id, 
                        string ref_no, 
                        string bill_to_address, 
                        string ship_to_address, 
                        string po_no, 
                        int terms_id, 
                        int sales_rep_id, 
                        System.DateTime shipping_date, 
                        int shipping_method_id, 
                        string fob, 
                        int customer_message_id, 
                        int tax_item_id, 
                        int sales_tax_code_id, 
                        string memo, 
                        int created_by, 
                        System.DateTime creation_date, 
                        int updated_by, 
                        System.DateTime update_date, 
                        short status, 
                        int account_id) {
                invoicesRow rowinvoicesRow = ((invoicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        date,
                        customer_id,
                        ref_no,
                        bill_to_address,
                        ship_to_address,
                        po_no,
                        terms_id,
                        sales_rep_id,
                        shipping_date,
                        shipping_method_id,
                        fob,
                        customer_message_id,
                        tax_item_id,
                        sales_tax_code_id,
                        memo,
                        created_by,
                        creation_date,
                        updated_by,
                        update_date,
                        status,
                        account_id};
                rowinvoicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowinvoicesRow);
                return rowinvoicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                invoicesDataTable cln = ((invoicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new invoicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columndate = base.Columns["date"];
                this.columncustomer_id = base.Columns["customer_id"];
                this.columnref_no = base.Columns["ref_no"];
                this.columnbill_to_address = base.Columns["bill_to_address"];
                this.columnship_to_address = base.Columns["ship_to_address"];
                this.columnpo_no = base.Columns["po_no"];
                this.columnterms_id = base.Columns["terms_id"];
                this.columnsales_rep_id = base.Columns["sales_rep_id"];
                this.columnshipping_date = base.Columns["shipping_date"];
                this.columnshipping_method_id = base.Columns["shipping_method_id"];
                this.columnfob = base.Columns["fob"];
                this.columncustomer_message_id = base.Columns["customer_message_id"];
                this.columntax_item_id = base.Columns["tax_item_id"];
                this.columnsales_tax_code_id = base.Columns["sales_tax_code_id"];
                this.columnmemo = base.Columns["memo"];
                this.columncreated_by = base.Columns["created_by"];
                this.columncreation_date = base.Columns["creation_date"];
                this.columnupdated_by = base.Columns["updated_by"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnstatus = base.Columns["status"];
                this.columnaccount_id = base.Columns["account_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columncustomer_id = new global::System.Data.DataColumn("customer_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer_id);
                this.columnref_no = new global::System.Data.DataColumn("ref_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnref_no);
                this.columnbill_to_address = new global::System.Data.DataColumn("bill_to_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbill_to_address);
                this.columnship_to_address = new global::System.Data.DataColumn("ship_to_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnship_to_address);
                this.columnpo_no = new global::System.Data.DataColumn("po_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpo_no);
                this.columnterms_id = new global::System.Data.DataColumn("terms_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnterms_id);
                this.columnsales_rep_id = new global::System.Data.DataColumn("sales_rep_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_rep_id);
                this.columnshipping_date = new global::System.Data.DataColumn("shipping_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshipping_date);
                this.columnshipping_method_id = new global::System.Data.DataColumn("shipping_method_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshipping_method_id);
                this.columnfob = new global::System.Data.DataColumn("fob", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfob);
                this.columncustomer_message_id = new global::System.Data.DataColumn("customer_message_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomer_message_id);
                this.columntax_item_id = new global::System.Data.DataColumn("tax_item_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntax_item_id);
                this.columnsales_tax_code_id = new global::System.Data.DataColumn("sales_tax_code_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_tax_code_id);
                this.columnmemo = new global::System.Data.DataColumn("memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmemo);
                this.columncreated_by = new global::System.Data.DataColumn("created_by", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated_by);
                this.columncreation_date = new global::System.Data.DataColumn("creation_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreation_date);
                this.columnupdated_by = new global::System.Data.DataColumn("updated_by", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdated_by);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnaccount_id = new global::System.Data.DataColumn("account_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public invoicesRow NewinvoicesRow() {
                return ((invoicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new invoicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(invoicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.invoicesRowChanged != null)) {
                    this.invoicesRowChanged(this, new invoicesRowChangeEvent(((invoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.invoicesRowChanging != null)) {
                    this.invoicesRowChanging(this, new invoicesRowChangeEvent(((invoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.invoicesRowDeleted != null)) {
                    this.invoicesRowDeleted(this, new invoicesRowChangeEvent(((invoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.invoicesRowDeleting != null)) {
                    this.invoicesRowDeleting(this, new invoicesRowChangeEvent(((invoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveinvoicesRow(invoicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "invoicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class termsDataTable : global::System.Data.TypedTableBase<termsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columninactive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public termsDataTable() {
                this.TableName = "terms";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal termsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected termsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public termsRow this[int index] {
                get {
                    return ((termsRow)(this.Rows[index]));
                }
            }
            
            public event termsRowChangeEventHandler termsRowChanging;
            
            public event termsRowChangeEventHandler termsRowChanged;
            
            public event termsRowChangeEventHandler termsRowDeleting;
            
            public event termsRowChangeEventHandler termsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtermsRow(termsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public termsRow AddtermsRow(string name, short inactive) {
                termsRow rowtermsRow = ((termsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        inactive};
                rowtermsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtermsRow);
                return rowtermsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                termsDataTable cln = ((termsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new termsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columninactive = base.Columns["inactive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public termsRow NewtermsRow() {
                return ((termsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new termsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(termsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.termsRowChanged != null)) {
                    this.termsRowChanged(this, new termsRowChangeEvent(((termsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.termsRowChanging != null)) {
                    this.termsRowChanging(this, new termsRowChangeEvent(((termsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.termsRowDeleted != null)) {
                    this.termsRowDeleted(this, new termsRowChangeEvent(((termsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.termsRowDeleting != null)) {
                    this.termsRowDeleting(this, new termsRowChangeEvent(((termsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetermsRow(termsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "termsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class employeesDataTable : global::System.Data.TypedTableBase<employeesRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnmiddle_name;
            
            private global::System.Data.DataColumn columnstreet1;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columndate_of_birth;
            
            private global::System.Data.DataColumn columnmarital_status;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnreligion;
            
            private global::System.Data.DataColumn columnzip;
            
            private global::System.Data.DataColumn columndate_hired;
            
            private global::System.Data.DataColumn columndate_resigned;
            
            private global::System.Data.DataColumn columnschool;
            
            private global::System.Data.DataColumn columncourse;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnbranch_id;
            
            private global::System.Data.DataColumn columndepartment_id;
            
            private global::System.Data.DataColumn columnaccount_no;
            
            private global::System.Data.DataColumn columnstat_code;
            
            private global::System.Data.DataColumn columnshift_id;
            
            private global::System.Data.DataColumn columnhdmf;
            
            private global::System.Data.DataColumn columnss_no;
            
            private global::System.Data.DataColumn columntin;
            
            private global::System.Data.DataColumn columnphilhealth;
            
            private global::System.Data.DataColumn columnbracket_id;
            
            private global::System.Data.DataColumn columnded_hdmf15th;
            
            private global::System.Data.DataColumn columnded_sss15th;
            
            private global::System.Data.DataColumn columnded_tax15th;
            
            private global::System.Data.DataColumn columnded_philhealth15th;
            
            private global::System.Data.DataColumn columnded_hdmf30th;
            
            private global::System.Data.DataColumn columnded_sss30th;
            
            private global::System.Data.DataColumn columnded_tax30th;
            
            private global::System.Data.DataColumn columnded_philhealth30th;
            
            private global::System.Data.DataColumn columnatm;
            
            private global::System.Data.DataColumn columnseniority_pay;
            
            private global::System.Data.DataColumn columnpay_rate;
            
            private global::System.Data.DataColumn columnvl_allow;
            
            private global::System.Data.DataColumn columnsl_allow;
            
            private global::System.Data.DataColumn columnimage;
            
            private global::System.Data.DataColumn columninactive;
            
            private global::System.Data.DataColumn columnfingerprint_sig;
            
            private global::System.Data.DataColumn columnlog_exemption;
            
            private global::System.Data.DataColumn columnsalary;
            
            private global::System.Data.DataColumn columnmonthly_rate;
            
            private global::System.Data.DataColumn columndaily_rate;
            
            private global::System.Data.DataColumn columnhourly_rate;
            
            private global::System.Data.DataColumn columnposition_id;
            
            private global::System.Data.DataColumn columnemp_id;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnprint_on_check_as;
            
            private global::System.Data.DataColumn columnstreet2;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstate_id;
            
            private global::System.Data.DataColumn columncellular;
            
            private global::System.Data.DataColumn columnemail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeesDataTable() {
                this.TableName = "employees";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected employeesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn middle_nameColumn {
                get {
                    return this.columnmiddle_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn street1Column {
                get {
                    return this.columnstreet1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_of_birthColumn {
                get {
                    return this.columndate_of_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn marital_statusColumn {
                get {
                    return this.columnmarital_status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn religionColumn {
                get {
                    return this.columnreligion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zipColumn {
                get {
                    return this.columnzip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_hiredColumn {
                get {
                    return this.columndate_hired;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_resignedColumn {
                get {
                    return this.columndate_resigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn schoolColumn {
                get {
                    return this.columnschool;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn courseColumn {
                get {
                    return this.columncourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn branch_idColumn {
                get {
                    return this.columnbranch_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_noColumn {
                get {
                    return this.columnaccount_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stat_codeColumn {
                get {
                    return this.columnstat_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shift_idColumn {
                get {
                    return this.columnshift_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hdmfColumn {
                get {
                    return this.columnhdmf;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ss_noColumn {
                get {
                    return this.columnss_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn tinColumn {
                get {
                    return this.columntin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn philhealthColumn {
                get {
                    return this.columnphilhealth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bracket_idColumn {
                get {
                    return this.columnbracket_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_hdmf15thColumn {
                get {
                    return this.columnded_hdmf15th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_sss15thColumn {
                get {
                    return this.columnded_sss15th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_tax15thColumn {
                get {
                    return this.columnded_tax15th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_philhealth15thColumn {
                get {
                    return this.columnded_philhealth15th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_hdmf30thColumn {
                get {
                    return this.columnded_hdmf30th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_sss30thColumn {
                get {
                    return this.columnded_sss30th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_tax30thColumn {
                get {
                    return this.columnded_tax30th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ded_philhealth30thColumn {
                get {
                    return this.columnded_philhealth30th;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn atmColumn {
                get {
                    return this.columnatm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn seniority_payColumn {
                get {
                    return this.columnseniority_pay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn pay_rateColumn {
                get {
                    return this.columnpay_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vl_allowColumn {
                get {
                    return this.columnvl_allow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sl_allowColumn {
                get {
                    return this.columnsl_allow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageColumn {
                get {
                    return this.columnimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn fingerprint_sigColumn {
                get {
                    return this.columnfingerprint_sig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn log_exemptionColumn {
                get {
                    return this.columnlog_exemption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn salaryColumn {
                get {
                    return this.columnsalary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn monthly_rateColumn {
                get {
                    return this.columnmonthly_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daily_rateColumn {
                get {
                    return this.columndaily_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hourly_rateColumn {
                get {
                    return this.columnhourly_rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn position_idColumn {
                get {
                    return this.columnposition_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emp_idColumn {
                get {
                    return this.columnemp_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn print_on_check_asColumn {
                get {
                    return this.columnprint_on_check_as;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn street2Column {
                get {
                    return this.columnstreet2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn state_idColumn {
                get {
                    return this.columnstate_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cellularColumn {
                get {
                    return this.columncellular;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeesRow this[int index] {
                get {
                    return ((employeesRow)(this.Rows[index]));
                }
            }
            
            public event employeesRowChangeEventHandler employeesRowChanging;
            
            public event employeesRowChangeEventHandler employeesRowChanged;
            
            public event employeesRowChangeEventHandler employeesRowDeleting;
            
            public event employeesRowChangeEventHandler employeesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddemployeesRow(employeesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeesRow AddemployeesRow(
                        string last_name, 
                        string first_name, 
                        string middle_name, 
                        string street1, 
                        short gender, 
                        System.DateTime date_of_birth, 
                        short marital_status, 
                        string phone, 
                        string religion, 
                        string zip, 
                        System.DateTime date_hired, 
                        System.DateTime date_resigned, 
                        string school, 
                        string course, 
                        string contact, 
                        int branch_id, 
                        int department_id, 
                        string account_no, 
                        string stat_code, 
                        int shift_id, 
                        string hdmf, 
                        string ss_no, 
                        string tin, 
                        string philhealth, 
                        int bracket_id, 
                        short ded_hdmf15th, 
                        short ded_sss15th, 
                        short ded_tax15th, 
                        short ded_philhealth15th, 
                        short ded_hdmf30th, 
                        short ded_sss30th, 
                        short ded_tax30th, 
                        short ded_philhealth30th, 
                        string atm, 
                        double seniority_pay, 
                        double pay_rate, 
                        double vl_allow, 
                        double sl_allow, 
                        byte[] image, 
                        short inactive, 
                        byte[] fingerprint_sig, 
                        short log_exemption, 
                        double salary, 
                        double monthly_rate, 
                        double daily_rate, 
                        double hourly_rate, 
                        int position_id, 
                        string emp_id, 
                        string title, 
                        string print_on_check_as, 
                        string street2, 
                        string city, 
                        int state_id, 
                        string cellular, 
                        string email) {
                employeesRow rowemployeesRow = ((employeesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        last_name,
                        first_name,
                        middle_name,
                        street1,
                        gender,
                        date_of_birth,
                        marital_status,
                        phone,
                        religion,
                        zip,
                        date_hired,
                        date_resigned,
                        school,
                        course,
                        contact,
                        branch_id,
                        department_id,
                        account_no,
                        stat_code,
                        shift_id,
                        hdmf,
                        ss_no,
                        tin,
                        philhealth,
                        bracket_id,
                        ded_hdmf15th,
                        ded_sss15th,
                        ded_tax15th,
                        ded_philhealth15th,
                        ded_hdmf30th,
                        ded_sss30th,
                        ded_tax30th,
                        ded_philhealth30th,
                        atm,
                        seniority_pay,
                        pay_rate,
                        vl_allow,
                        sl_allow,
                        image,
                        inactive,
                        fingerprint_sig,
                        log_exemption,
                        salary,
                        monthly_rate,
                        daily_rate,
                        hourly_rate,
                        position_id,
                        emp_id,
                        title,
                        print_on_check_as,
                        street2,
                        city,
                        state_id,
                        cellular,
                        email};
                rowemployeesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowemployeesRow);
                return rowemployeesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                employeesDataTable cln = ((employeesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new employeesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnlast_name = base.Columns["last_name"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnmiddle_name = base.Columns["middle_name"];
                this.columnstreet1 = base.Columns["street1"];
                this.columngender = base.Columns["gender"];
                this.columndate_of_birth = base.Columns["date_of_birth"];
                this.columnmarital_status = base.Columns["marital_status"];
                this.columnphone = base.Columns["phone"];
                this.columnreligion = base.Columns["religion"];
                this.columnzip = base.Columns["zip"];
                this.columndate_hired = base.Columns["date_hired"];
                this.columndate_resigned = base.Columns["date_resigned"];
                this.columnschool = base.Columns["school"];
                this.columncourse = base.Columns["course"];
                this.columncontact = base.Columns["contact"];
                this.columnbranch_id = base.Columns["branch_id"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columnaccount_no = base.Columns["account_no"];
                this.columnstat_code = base.Columns["stat_code"];
                this.columnshift_id = base.Columns["shift_id"];
                this.columnhdmf = base.Columns["hdmf"];
                this.columnss_no = base.Columns["ss_no"];
                this.columntin = base.Columns["tin"];
                this.columnphilhealth = base.Columns["philhealth"];
                this.columnbracket_id = base.Columns["bracket_id"];
                this.columnded_hdmf15th = base.Columns["ded_hdmf15th"];
                this.columnded_sss15th = base.Columns["ded_sss15th"];
                this.columnded_tax15th = base.Columns["ded_tax15th"];
                this.columnded_philhealth15th = base.Columns["ded_philhealth15th"];
                this.columnded_hdmf30th = base.Columns["ded_hdmf30th"];
                this.columnded_sss30th = base.Columns["ded_sss30th"];
                this.columnded_tax30th = base.Columns["ded_tax30th"];
                this.columnded_philhealth30th = base.Columns["ded_philhealth30th"];
                this.columnatm = base.Columns["atm"];
                this.columnseniority_pay = base.Columns["seniority_pay"];
                this.columnpay_rate = base.Columns["pay_rate"];
                this.columnvl_allow = base.Columns["vl_allow"];
                this.columnsl_allow = base.Columns["sl_allow"];
                this.columnimage = base.Columns["image"];
                this.columninactive = base.Columns["inactive"];
                this.columnfingerprint_sig = base.Columns["fingerprint_sig"];
                this.columnlog_exemption = base.Columns["log_exemption"];
                this.columnsalary = base.Columns["salary"];
                this.columnmonthly_rate = base.Columns["monthly_rate"];
                this.columndaily_rate = base.Columns["daily_rate"];
                this.columnhourly_rate = base.Columns["hourly_rate"];
                this.columnposition_id = base.Columns["position_id"];
                this.columnemp_id = base.Columns["emp_id"];
                this.columntitle = base.Columns["title"];
                this.columnprint_on_check_as = base.Columns["print_on_check_as"];
                this.columnstreet2 = base.Columns["street2"];
                this.columncity = base.Columns["city"];
                this.columnstate_id = base.Columns["state_id"];
                this.columncellular = base.Columns["cellular"];
                this.columnemail = base.Columns["email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnmiddle_name = new global::System.Data.DataColumn("middle_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddle_name);
                this.columnstreet1 = new global::System.Data.DataColumn("street1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstreet1);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columndate_of_birth = new global::System.Data.DataColumn("date_of_birth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_of_birth);
                this.columnmarital_status = new global::System.Data.DataColumn("marital_status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarital_status);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnreligion = new global::System.Data.DataColumn("religion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreligion);
                this.columnzip = new global::System.Data.DataColumn("zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzip);
                this.columndate_hired = new global::System.Data.DataColumn("date_hired", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_hired);
                this.columndate_resigned = new global::System.Data.DataColumn("date_resigned", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_resigned);
                this.columnschool = new global::System.Data.DataColumn("school", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnschool);
                this.columncourse = new global::System.Data.DataColumn("course", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncourse);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnbranch_id = new global::System.Data.DataColumn("branch_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbranch_id);
                this.columndepartment_id = new global::System.Data.DataColumn("department_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columnaccount_no = new global::System.Data.DataColumn("account_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_no);
                this.columnstat_code = new global::System.Data.DataColumn("stat_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstat_code);
                this.columnshift_id = new global::System.Data.DataColumn("shift_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshift_id);
                this.columnhdmf = new global::System.Data.DataColumn("hdmf", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhdmf);
                this.columnss_no = new global::System.Data.DataColumn("ss_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnss_no);
                this.columntin = new global::System.Data.DataColumn("tin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntin);
                this.columnphilhealth = new global::System.Data.DataColumn("philhealth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphilhealth);
                this.columnbracket_id = new global::System.Data.DataColumn("bracket_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbracket_id);
                this.columnded_hdmf15th = new global::System.Data.DataColumn("ded_hdmf15th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_hdmf15th);
                this.columnded_sss15th = new global::System.Data.DataColumn("ded_sss15th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_sss15th);
                this.columnded_tax15th = new global::System.Data.DataColumn("ded_tax15th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_tax15th);
                this.columnded_philhealth15th = new global::System.Data.DataColumn("ded_philhealth15th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_philhealth15th);
                this.columnded_hdmf30th = new global::System.Data.DataColumn("ded_hdmf30th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_hdmf30th);
                this.columnded_sss30th = new global::System.Data.DataColumn("ded_sss30th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_sss30th);
                this.columnded_tax30th = new global::System.Data.DataColumn("ded_tax30th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_tax30th);
                this.columnded_philhealth30th = new global::System.Data.DataColumn("ded_philhealth30th", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnded_philhealth30th);
                this.columnatm = new global::System.Data.DataColumn("atm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnatm);
                this.columnseniority_pay = new global::System.Data.DataColumn("seniority_pay", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseniority_pay);
                this.columnpay_rate = new global::System.Data.DataColumn("pay_rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpay_rate);
                this.columnvl_allow = new global::System.Data.DataColumn("vl_allow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvl_allow);
                this.columnsl_allow = new global::System.Data.DataColumn("sl_allow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsl_allow);
                this.columnimage = new global::System.Data.DataColumn("image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.columnfingerprint_sig = new global::System.Data.DataColumn("fingerprint_sig", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfingerprint_sig);
                this.columnlog_exemption = new global::System.Data.DataColumn("log_exemption", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlog_exemption);
                this.columnsalary = new global::System.Data.DataColumn("salary", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsalary);
                this.columnmonthly_rate = new global::System.Data.DataColumn("monthly_rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonthly_rate);
                this.columndaily_rate = new global::System.Data.DataColumn("daily_rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndaily_rate);
                this.columnhourly_rate = new global::System.Data.DataColumn("hourly_rate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhourly_rate);
                this.columnposition_id = new global::System.Data.DataColumn("position_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition_id);
                this.columnemp_id = new global::System.Data.DataColumn("emp_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemp_id);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnprint_on_check_as = new global::System.Data.DataColumn("print_on_check_as", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprint_on_check_as);
                this.columnstreet2 = new global::System.Data.DataColumn("street2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstreet2);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstate_id = new global::System.Data.DataColumn("state_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate_id);
                this.columncellular = new global::System.Data.DataColumn("cellular", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncellular);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeesRow NewemployeesRow() {
                return ((employeesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new employeesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(employeesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.employeesRowChanged != null)) {
                    this.employeesRowChanged(this, new employeesRowChangeEvent(((employeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.employeesRowChanging != null)) {
                    this.employeesRowChanging(this, new employeesRowChangeEvent(((employeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.employeesRowDeleted != null)) {
                    this.employeesRowDeleted(this, new employeesRowChangeEvent(((employeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.employeesRowDeleting != null)) {
                    this.employeesRowDeleting(this, new employeesRowChangeEvent(((employeesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveemployeesRow(employeesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "employeesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class purchase_ordersDataTable : global::System.Data.TypedTableBase<purchase_ordersRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columndate;
            
            private global::System.Data.DataColumn columnvendor_id;
            
            private global::System.Data.DataColumn columnprepared_by;
            
            private global::System.Data.DataColumn columnapproved_by;
            
            private global::System.Data.DataColumn columnreference_no;
            
            private global::System.Data.DataColumn columncreated_by;
            
            private global::System.Data.DataColumn columncreation_date;
            
            private global::System.Data.DataColumn columnupdated_by;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnpo_no;
            
            private global::System.Data.DataColumn columnship_to_address;
            
            private global::System.Data.DataColumn columnvendor_address;
            
            private global::System.Data.DataColumn columnvendor_message;
            
            private global::System.Data.DataColumn columnmemo;
            
            private global::System.Data.DataColumn columnstatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchase_ordersDataTable() {
                this.TableName = "purchase_orders";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal purchase_ordersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected purchase_ordersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateColumn {
                get {
                    return this.columndate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vendor_idColumn {
                get {
                    return this.columnvendor_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn prepared_byColumn {
                get {
                    return this.columnprepared_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn approved_byColumn {
                get {
                    return this.columnapproved_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reference_noColumn {
                get {
                    return this.columnreference_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn created_byColumn {
                get {
                    return this.columncreated_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn creation_dateColumn {
                get {
                    return this.columncreation_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updated_byColumn {
                get {
                    return this.columnupdated_by;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn po_noColumn {
                get {
                    return this.columnpo_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ship_to_addressColumn {
                get {
                    return this.columnship_to_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vendor_addressColumn {
                get {
                    return this.columnvendor_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vendor_messageColumn {
                get {
                    return this.columnvendor_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn memoColumn {
                get {
                    return this.columnmemo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchase_ordersRow this[int index] {
                get {
                    return ((purchase_ordersRow)(this.Rows[index]));
                }
            }
            
            public event purchase_ordersRowChangeEventHandler purchase_ordersRowChanging;
            
            public event purchase_ordersRowChangeEventHandler purchase_ordersRowChanged;
            
            public event purchase_ordersRowChangeEventHandler purchase_ordersRowDeleting;
            
            public event purchase_ordersRowChangeEventHandler purchase_ordersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addpurchase_ordersRow(purchase_ordersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchase_ordersRow Addpurchase_ordersRow(System.DateTime date, int vendor_id, string prepared_by, string approved_by, string reference_no, int created_by, System.DateTime creation_date, int updated_by, System.DateTime update_date, string po_no, string ship_to_address, string vendor_address, string vendor_message, string memo, short status) {
                purchase_ordersRow rowpurchase_ordersRow = ((purchase_ordersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        date,
                        vendor_id,
                        prepared_by,
                        approved_by,
                        reference_no,
                        created_by,
                        creation_date,
                        updated_by,
                        update_date,
                        po_no,
                        ship_to_address,
                        vendor_address,
                        vendor_message,
                        memo,
                        status};
                rowpurchase_ordersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpurchase_ordersRow);
                return rowpurchase_ordersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                purchase_ordersDataTable cln = ((purchase_ordersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new purchase_ordersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columndate = base.Columns["date"];
                this.columnvendor_id = base.Columns["vendor_id"];
                this.columnprepared_by = base.Columns["prepared_by"];
                this.columnapproved_by = base.Columns["approved_by"];
                this.columnreference_no = base.Columns["reference_no"];
                this.columncreated_by = base.Columns["created_by"];
                this.columncreation_date = base.Columns["creation_date"];
                this.columnupdated_by = base.Columns["updated_by"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnpo_no = base.Columns["po_no"];
                this.columnship_to_address = base.Columns["ship_to_address"];
                this.columnvendor_address = base.Columns["vendor_address"];
                this.columnvendor_message = base.Columns["vendor_message"];
                this.columnmemo = base.Columns["memo"];
                this.columnstatus = base.Columns["status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columndate = new global::System.Data.DataColumn("date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate);
                this.columnvendor_id = new global::System.Data.DataColumn("vendor_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvendor_id);
                this.columnprepared_by = new global::System.Data.DataColumn("prepared_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprepared_by);
                this.columnapproved_by = new global::System.Data.DataColumn("approved_by", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapproved_by);
                this.columnreference_no = new global::System.Data.DataColumn("reference_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreference_no);
                this.columncreated_by = new global::System.Data.DataColumn("created_by", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated_by);
                this.columncreation_date = new global::System.Data.DataColumn("creation_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreation_date);
                this.columnupdated_by = new global::System.Data.DataColumn("updated_by", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdated_by);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnpo_no = new global::System.Data.DataColumn("po_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpo_no);
                this.columnship_to_address = new global::System.Data.DataColumn("ship_to_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnship_to_address);
                this.columnvendor_address = new global::System.Data.DataColumn("vendor_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvendor_address);
                this.columnvendor_message = new global::System.Data.DataColumn("vendor_message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvendor_message);
                this.columnmemo = new global::System.Data.DataColumn("memo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmemo);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchase_ordersRow Newpurchase_ordersRow() {
                return ((purchase_ordersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new purchase_ordersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(purchase_ordersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.purchase_ordersRowChanged != null)) {
                    this.purchase_ordersRowChanged(this, new purchase_ordersRowChangeEvent(((purchase_ordersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.purchase_ordersRowChanging != null)) {
                    this.purchase_ordersRowChanging(this, new purchase_ordersRowChangeEvent(((purchase_ordersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.purchase_ordersRowDeleted != null)) {
                    this.purchase_ordersRowDeleted(this, new purchase_ordersRowChangeEvent(((purchase_ordersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.purchase_ordersRowDeleting != null)) {
                    this.purchase_ordersRowDeleting(this, new purchase_ordersRowChangeEvent(((purchase_ordersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removepurchase_ordersRow(purchase_ordersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "purchase_ordersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class other_namesDataTable : global::System.Data.TypedTableBase<other_namesRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columntitle;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnmiddle_name;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columncontact;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnalt_phone;
            
            private global::System.Data.DataColumn columnalt_contact;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnaccount_no;
            
            private global::System.Data.DataColumn columninactive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public other_namesDataTable() {
                this.TableName = "other_names";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal other_namesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected other_namesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn titleColumn {
                get {
                    return this.columntitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn middle_nameColumn {
                get {
                    return this.columnmiddle_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactColumn {
                get {
                    return this.columncontact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alt_phoneColumn {
                get {
                    return this.columnalt_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn alt_contactColumn {
                get {
                    return this.columnalt_contact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn account_noColumn {
                get {
                    return this.columnaccount_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public other_namesRow this[int index] {
                get {
                    return ((other_namesRow)(this.Rows[index]));
                }
            }
            
            public event other_namesRowChangeEventHandler other_namesRowChanging;
            
            public event other_namesRowChangeEventHandler other_namesRowChanged;
            
            public event other_namesRowChangeEventHandler other_namesRowDeleting;
            
            public event other_namesRowChangeEventHandler other_namesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addother_namesRow(other_namesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public other_namesRow Addother_namesRow(string name, string company_name, string title, string first_name, string middle_name, string last_name, string address, string contact, string phone, string fax, string alt_phone, string alt_contact, string email, string account_no, short inactive) {
                other_namesRow rowother_namesRow = ((other_namesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        company_name,
                        title,
                        first_name,
                        middle_name,
                        last_name,
                        address,
                        contact,
                        phone,
                        fax,
                        alt_phone,
                        alt_contact,
                        email,
                        account_no,
                        inactive};
                rowother_namesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowother_namesRow);
                return rowother_namesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                other_namesDataTable cln = ((other_namesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new other_namesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columncompany_name = base.Columns["company_name"];
                this.columntitle = base.Columns["title"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnmiddle_name = base.Columns["middle_name"];
                this.columnlast_name = base.Columns["last_name"];
                this.columnaddress = base.Columns["address"];
                this.columncontact = base.Columns["contact"];
                this.columnphone = base.Columns["phone"];
                this.columnfax = base.Columns["fax"];
                this.columnalt_phone = base.Columns["alt_phone"];
                this.columnalt_contact = base.Columns["alt_contact"];
                this.columnemail = base.Columns["email"];
                this.columnaccount_no = base.Columns["account_no"];
                this.columninactive = base.Columns["inactive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columntitle = new global::System.Data.DataColumn("title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntitle);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnmiddle_name = new global::System.Data.DataColumn("middle_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmiddle_name);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columncontact = new global::System.Data.DataColumn("contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontact);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnalt_phone = new global::System.Data.DataColumn("alt_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalt_phone);
                this.columnalt_contact = new global::System.Data.DataColumn("alt_contact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnalt_contact);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnaccount_no = new global::System.Data.DataColumn("account_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount_no);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public other_namesRow Newother_namesRow() {
                return ((other_namesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new other_namesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(other_namesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.other_namesRowChanged != null)) {
                    this.other_namesRowChanged(this, new other_namesRowChangeEvent(((other_namesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.other_namesRowChanging != null)) {
                    this.other_namesRowChanging(this, new other_namesRowChangeEvent(((other_namesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.other_namesRowDeleted != null)) {
                    this.other_namesRowDeleted(this, new other_namesRowChangeEvent(((other_namesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.other_namesRowDeleting != null)) {
                    this.other_namesRowDeleting(this, new other_namesRowChangeEvent(((other_namesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeother_namesRow(other_namesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "other_namesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class payroll_itemsDataTable : global::System.Data.TypedTableBase<payroll_itemsRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columninactive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public payroll_itemsDataTable() {
                this.TableName = "payroll_items";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal payroll_itemsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected payroll_itemsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn inactiveColumn {
                get {
                    return this.columninactive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public payroll_itemsRow this[int index] {
                get {
                    return ((payroll_itemsRow)(this.Rows[index]));
                }
            }
            
            public event payroll_itemsRowChangeEventHandler payroll_itemsRowChanging;
            
            public event payroll_itemsRowChangeEventHandler payroll_itemsRowChanged;
            
            public event payroll_itemsRowChangeEventHandler payroll_itemsRowDeleting;
            
            public event payroll_itemsRowChangeEventHandler payroll_itemsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addpayroll_itemsRow(payroll_itemsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public payroll_itemsRow Addpayroll_itemsRow(string name, short inactive) {
                payroll_itemsRow rowpayroll_itemsRow = ((payroll_itemsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        inactive};
                rowpayroll_itemsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpayroll_itemsRow);
                return rowpayroll_itemsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                payroll_itemsDataTable cln = ((payroll_itemsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new payroll_itemsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columninactive = base.Columns["inactive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columninactive = new global::System.Data.DataColumn("inactive", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninactive);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, false));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public payroll_itemsRow Newpayroll_itemsRow() {
                return ((payroll_itemsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new payroll_itemsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(payroll_itemsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.payroll_itemsRowChanged != null)) {
                    this.payroll_itemsRowChanged(this, new payroll_itemsRowChangeEvent(((payroll_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.payroll_itemsRowChanging != null)) {
                    this.payroll_itemsRowChanging(this, new payroll_itemsRowChangeEvent(((payroll_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.payroll_itemsRowDeleted != null)) {
                    this.payroll_itemsRowDeleted(this, new payroll_itemsRowChangeEvent(((payroll_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.payroll_itemsRowDeleting != null)) {
                    this.payroll_itemsRowDeleting(this, new payroll_itemsRowChangeEvent(((payroll_itemsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removepayroll_itemsRow(payroll_itemsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet ds = new DataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "payroll_itemsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class customersRow : global::System.Data.DataRow {
            
            private customersDataTable tablecustomers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal customersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecustomers = ((customersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string trade_assistance {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.trade_assistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'trade_assistance\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.trade_assistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string classification {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.classificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'classification\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.classificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string type_of_deal {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.type_of_dealColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type_of_deal\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.type_of_dealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double balance {
                get {
                    try {
                        return ((double)(this[this.tablecustomers.balanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tablecustomers.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime balance_as_of {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecustomers.balance_as_ofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance_as_of\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.balance_as_ofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'title\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_name {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.last_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_name\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string middle_name {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.middle_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'middle_name\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.middle_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ship_to_address {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.ship_to_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ship_to_address\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.ship_to_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alt_phone {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.alt_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alt_phone\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.alt_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alt_contact {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.alt_contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alt_contact\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.alt_contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.ccColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cc\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.ccColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int customer_type_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.customer_type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer_type_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.customer_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int terms_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.terms_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'terms_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.terms_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sales_rep_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.sales_rep_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_rep_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.sales_rep_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short send_method {
                get {
                    try {
                        return ((short)(this[this.tablecustomers.send_methodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'send_method\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.send_methodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sales_tax_code_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.sales_tax_code_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_tax_code_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.sales_tax_code_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int tax_item_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.tax_item_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax_item_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.tax_item_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string resale_number {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.resale_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'resale_number\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.resale_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int price_level_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.price_level_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'price_level_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.price_level_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_no {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.account_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_no\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.account_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double credit_limit {
                get {
                    try {
                        return ((double)(this[this.tablecustomers.credit_limitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'credit_limit\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.credit_limitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int payment_method_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.payment_method_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'payment_method_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.payment_method_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string credit_card_no {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.credit_card_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'credit_card_no\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.credit_card_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc_expiry_month {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.cc_expiry_monthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cc_expiry_month\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.cc_expiry_monthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc_expiry_year {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.cc_expiry_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cc_expiry_year\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.cc_expiry_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_on_card {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.name_on_cardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name_on_card\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.name_on_cardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc_address {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.cc_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cc_address\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.cc_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cc_zip_code {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.cc_zip_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cc_zip_code\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.cc_zip_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short job_status {
                get {
                    try {
                        return ((short)(this[this.tablecustomers.job_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'job_status\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.job_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime start_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecustomers.start_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'start_date\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.start_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime projected_end {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecustomers.projected_endColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'projected_end\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.projected_endColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecustomers.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string job_description {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.job_descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'job_description\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.job_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int job_type_id {
                get {
                    try {
                        return ((int)(this[this.tablecustomers.job_type_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'job_type_id\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.job_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string notes {
                get {
                    try {
                        return ((string)(this[this.tablecustomers.notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'notes\' in table \'customers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecustomers.notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablecustomers.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablecustomers.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablecustomers.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablecustomers.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablecustomers.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablecustomers.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tablecustomers.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tablecustomers.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istrade_assistanceNull() {
                return this.IsNull(this.tablecustomers.trade_assistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settrade_assistanceNull() {
                this[this.tablecustomers.trade_assistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsclassificationNull() {
                return this.IsNull(this.tablecustomers.classificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetclassificationNull() {
                this[this.tablecustomers.classificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istype_of_dealNull() {
                return this.IsNull(this.tablecustomers.type_of_dealColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settype_of_dealNull() {
                this[this.tablecustomers.type_of_dealColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbalanceNull() {
                return this.IsNull(this.tablecustomers.balanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbalanceNull() {
                this[this.tablecustomers.balanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tablecustomers.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tablecustomers.inactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tablecustomers.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tablecustomers.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbalance_as_ofNull() {
                return this.IsNull(this.tablecustomers.balance_as_ofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbalance_as_ofNull() {
                this[this.tablecustomers.balance_as_ofColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstitleNull() {
                return this.IsNull(this.tablecustomers.titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettitleNull() {
                this[this.tablecustomers.titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tablecustomers.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tablecustomers.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_nameNull() {
                return this.IsNull(this.tablecustomers.last_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_nameNull() {
                this[this.tablecustomers.last_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismiddle_nameNull() {
                return this.IsNull(this.tablecustomers.middle_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmiddle_nameNull() {
                this[this.tablecustomers.middle_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isship_to_addressNull() {
                return this.IsNull(this.tablecustomers.ship_to_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setship_to_addressNull() {
                this[this.tablecustomers.ship_to_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tablecustomers.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tablecustomers.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tablecustomers.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tablecustomers.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalt_phoneNull() {
                return this.IsNull(this.tablecustomers.alt_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalt_phoneNull() {
                this[this.tablecustomers.alt_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalt_contactNull() {
                return this.IsNull(this.tablecustomers.alt_contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalt_contactNull() {
                this[this.tablecustomers.alt_contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tablecustomers.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tablecustomers.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsccNull() {
                return this.IsNull(this.tablecustomers.ccColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetccNull() {
                this[this.tablecustomers.ccColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscustomer_type_idNull() {
                return this.IsNull(this.tablecustomers.customer_type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcustomer_type_idNull() {
                this[this.tablecustomers.customer_type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isterms_idNull() {
                return this.IsNull(this.tablecustomers.terms_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setterms_idNull() {
                this[this.tablecustomers.terms_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_rep_idNull() {
                return this.IsNull(this.tablecustomers.sales_rep_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_rep_idNull() {
                this[this.tablecustomers.sales_rep_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issend_methodNull() {
                return this.IsNull(this.tablecustomers.send_methodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsend_methodNull() {
                this[this.tablecustomers.send_methodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_tax_code_idNull() {
                return this.IsNull(this.tablecustomers.sales_tax_code_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_tax_code_idNull() {
                this[this.tablecustomers.sales_tax_code_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istax_item_idNull() {
                return this.IsNull(this.tablecustomers.tax_item_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settax_item_idNull() {
                this[this.tablecustomers.tax_item_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isresale_numberNull() {
                return this.IsNull(this.tablecustomers.resale_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setresale_numberNull() {
                this[this.tablecustomers.resale_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprice_level_idNull() {
                return this.IsNull(this.tablecustomers.price_level_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprice_level_idNull() {
                this[this.tablecustomers.price_level_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_noNull() {
                return this.IsNull(this.tablecustomers.account_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_noNull() {
                this[this.tablecustomers.account_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscredit_limitNull() {
                return this.IsNull(this.tablecustomers.credit_limitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcredit_limitNull() {
                this[this.tablecustomers.credit_limitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispayment_method_idNull() {
                return this.IsNull(this.tablecustomers.payment_method_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpayment_method_idNull() {
                this[this.tablecustomers.payment_method_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscredit_card_noNull() {
                return this.IsNull(this.tablecustomers.credit_card_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcredit_card_noNull() {
                this[this.tablecustomers.credit_card_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_expiry_monthNull() {
                return this.IsNull(this.tablecustomers.cc_expiry_monthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_expiry_monthNull() {
                this[this.tablecustomers.cc_expiry_monthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_expiry_yearNull() {
                return this.IsNull(this.tablecustomers.cc_expiry_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_expiry_yearNull() {
                this[this.tablecustomers.cc_expiry_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname_on_cardNull() {
                return this.IsNull(this.tablecustomers.name_on_cardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname_on_cardNull() {
                this[this.tablecustomers.name_on_cardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_addressNull() {
                return this.IsNull(this.tablecustomers.cc_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_addressNull() {
                this[this.tablecustomers.cc_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscc_zip_codeNull() {
                return this.IsNull(this.tablecustomers.cc_zip_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcc_zip_codeNull() {
                this[this.tablecustomers.cc_zip_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjob_statusNull() {
                return this.IsNull(this.tablecustomers.job_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjob_statusNull() {
                this[this.tablecustomers.job_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstart_dateNull() {
                return this.IsNull(this.tablecustomers.start_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstart_dateNull() {
                this[this.tablecustomers.start_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprojected_endNull() {
                return this.IsNull(this.tablecustomers.projected_endColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprojected_endNull() {
                this[this.tablecustomers.projected_endColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isend_dateNull() {
                return this.IsNull(this.tablecustomers.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setend_dateNull() {
                this[this.tablecustomers.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjob_descriptionNull() {
                return this.IsNull(this.tablecustomers.job_descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjob_descriptionNull() {
                this[this.tablecustomers.job_descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isjob_type_idNull() {
                return this.IsNull(this.tablecustomers.job_type_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setjob_type_idNull() {
                this[this.tablecustomers.job_type_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnotesNull() {
                return this.IsNull(this.tablecustomers.notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnotesNull() {
                this[this.tablecustomers.notesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class vendorsRow : global::System.Data.DataRow {
            
            private vendorsDataTable tablevendors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal vendorsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablevendors = ((vendorsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tablevendors.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablevendors.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablevendors.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tablevendors.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tablevendors.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double balance {
                get {
                    try {
                        return ((double)(this[this.tablevendors.balanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tablevendors.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'vendors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablevendors.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablevendors.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablevendors.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablevendors.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablevendors.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablevendors.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablevendors.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tablevendors.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tablevendors.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tablevendors.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tablevendors.inactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbalanceNull() {
                return this.IsNull(this.tablevendors.balanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbalanceNull() {
                this[this.tablevendors.balanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tablevendors.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tablevendors.contactColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class companyRow : global::System.Data.DataRow {
            
            private companyDataTable tablecompany;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal companyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecompany = ((companyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tablecompany.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablecompany.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ship_to_name {
                get {
                    try {
                        return ((string)(this[this.tablecompany.ship_to_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ship_to_name\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.ship_to_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ship_to_address {
                get {
                    try {
                        return ((string)(this[this.tablecompany.ship_to_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ship_to_address\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.ship_to_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tablecompany.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tablecompany.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tablecompany.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tablecompany.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string website {
                get {
                    try {
                        return ((string)(this[this.tablecompany.websiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'website\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.websiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string legal_name {
                get {
                    try {
                        return ((string)(this[this.tablecompany.legal_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'legal_name\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.legal_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string legal_address {
                get {
                    try {
                        return ((string)(this[this.tablecompany.legal_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'legal_address\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.legal_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string legal_address1 {
                get {
                    try {
                        return ((string)(this[this.tablecompany.legal_address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'legal_address1\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.legal_address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tablecompany.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int state_id {
                get {
                    try {
                        return ((int)(this[this.tablecompany.state_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state_id\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.state_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zip {
                get {
                    try {
                        return ((string)(this[this.tablecompany.zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zip\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int legal_country_id {
                get {
                    try {
                        return ((int)(this[this.tablecompany.legal_country_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'legal_country_id\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.legal_country_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int country_id {
                get {
                    try {
                        return ((int)(this[this.tablecompany.country_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'country_id\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.country_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short fiscal_year {
                get {
                    try {
                        return ((short)(this[this.tablecompany.fiscal_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fiscal_year\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.fiscal_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short tax_year {
                get {
                    try {
                        return ((short)(this[this.tablecompany.tax_yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax_year\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.tax_yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short income_tax_form {
                get {
                    try {
                        return ((short)(this[this.tablecompany.income_tax_formColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'income_tax_form\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.income_tax_formColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ein {
                get {
                    try {
                        return ((string)(this[this.tablecompany.einColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ein\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.einColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ssn {
                get {
                    try {
                        return ((string)(this[this.tablecompany.ssnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ssn\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.ssnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string payroll_contact {
                get {
                    try {
                        return ((string)(this[this.tablecompany.payroll_contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'payroll_contact\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.payroll_contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string payroll_contact_title {
                get {
                    try {
                        return ((string)(this[this.tablecompany.payroll_contact_titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'payroll_contact_title\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.payroll_contact_titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string payroll_contact_phone {
                get {
                    try {
                        return ((string)(this[this.tablecompany.payroll_contact_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'payroll_contact_phone\' in table \'company\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecompany.payroll_contact_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablecompany.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablecompany.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablecompany.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablecompany.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isship_to_nameNull() {
                return this.IsNull(this.tablecompany.ship_to_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setship_to_nameNull() {
                this[this.tablecompany.ship_to_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isship_to_addressNull() {
                return this.IsNull(this.tablecompany.ship_to_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setship_to_addressNull() {
                this[this.tablecompany.ship_to_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tablecompany.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tablecompany.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tablecompany.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tablecompany.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tablecompany.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tablecompany.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tablecompany.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tablecompany.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswebsiteNull() {
                return this.IsNull(this.tablecompany.websiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwebsiteNull() {
                this[this.tablecompany.websiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islegal_nameNull() {
                return this.IsNull(this.tablecompany.legal_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlegal_nameNull() {
                this[this.tablecompany.legal_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islegal_addressNull() {
                return this.IsNull(this.tablecompany.legal_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlegal_addressNull() {
                this[this.tablecompany.legal_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islegal_address1Null() {
                return this.IsNull(this.tablecompany.legal_address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlegal_address1Null() {
                this[this.tablecompany.legal_address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tablecompany.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tablecompany.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstate_idNull() {
                return this.IsNull(this.tablecompany.state_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstate_idNull() {
                this[this.tablecompany.state_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszipNull() {
                return this.IsNull(this.tablecompany.zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzipNull() {
                this[this.tablecompany.zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islegal_country_idNull() {
                return this.IsNull(this.tablecompany.legal_country_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlegal_country_idNull() {
                this[this.tablecompany.legal_country_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscountry_idNull() {
                return this.IsNull(this.tablecompany.country_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcountry_idNull() {
                this[this.tablecompany.country_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfiscal_yearNull() {
                return this.IsNull(this.tablecompany.fiscal_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfiscal_yearNull() {
                this[this.tablecompany.fiscal_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istax_yearNull() {
                return this.IsNull(this.tablecompany.tax_yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settax_yearNull() {
                this[this.tablecompany.tax_yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isincome_tax_formNull() {
                return this.IsNull(this.tablecompany.income_tax_formColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setincome_tax_formNull() {
                this[this.tablecompany.income_tax_formColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IseinNull() {
                return this.IsNull(this.tablecompany.einColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeteinNull() {
                this[this.tablecompany.einColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsssnNull() {
                return this.IsNull(this.tablecompany.ssnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetssnNull() {
                this[this.tablecompany.ssnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispayroll_contactNull() {
                return this.IsNull(this.tablecompany.payroll_contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpayroll_contactNull() {
                this[this.tablecompany.payroll_contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispayroll_contact_titleNull() {
                return this.IsNull(this.tablecompany.payroll_contact_titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpayroll_contact_titleNull() {
                this[this.tablecompany.payroll_contact_titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispayroll_contact_phoneNull() {
                return this.IsNull(this.tablecompany.payroll_contact_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpayroll_contact_phoneNull() {
                this[this.tablecompany.payroll_contact_phoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class accountsRow : global::System.Data.DataRow {
            
            private accountsDataTable tableaccounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal accountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableaccounts = ((accountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableaccounts.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableaccounts.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableaccounts.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string note {
                get {
                    try {
                        return ((string)(this[this.tableaccounts.noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'note\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double balance {
                get {
                    try {
                        return ((double)(this[this.tableaccounts.balanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'balance\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.balanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tableaccounts.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short type {
                get {
                    try {
                        return ((short)(this[this.tableaccounts.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short tax_line_mapping {
                get {
                    try {
                        return ((short)(this[this.tableaccounts.tax_line_mappingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax_line_mapping\' in table \'accounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableaccounts.tax_line_mappingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableaccounts.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableaccounts.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableaccounts.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableaccounts.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableaccounts.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tableaccounts.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoteNull() {
                return this.IsNull(this.tableaccounts.noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoteNull() {
                this[this.tableaccounts.noteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbalanceNull() {
                return this.IsNull(this.tableaccounts.balanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbalanceNull() {
                this[this.tableaccounts.balanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tableaccounts.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tableaccounts.inactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tableaccounts.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tableaccounts.typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istax_line_mappingNull() {
                return this.IsNull(this.tableaccounts.tax_line_mappingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settax_line_mappingNull() {
                this[this.tableaccounts.tax_line_mappingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class itemsRow : global::System.Data.DataRow {
            
            private itemsDataTable tableitems;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal itemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableitems = ((itemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableitems.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableitems.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sales_description {
                get {
                    try {
                        return ((string)(this[this.tableitems.sales_descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_description\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.sales_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double on_hand {
                get {
                    try {
                        return ((double)(this[this.tableitems.on_handColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'on_hand\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.on_handColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string unit_measure {
                get {
                    try {
                        return ((string)(this[this.tableitems.unit_measureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unit_measure\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.unit_measureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double sales_price {
                get {
                    try {
                        return ((double)(this[this.tableitems.sales_priceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_price\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.sales_priceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double reorder_point {
                get {
                    try {
                        return ((double)(this[this.tableitems.reorder_pointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reorder_point\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.reorder_pointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double overstock_level {
                get {
                    try {
                        return ((double)(this[this.tableitems.overstock_levelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'overstock_level\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.overstock_levelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string part_number {
                get {
                    try {
                        return ((string)(this[this.tableitems.part_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'part_number\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.part_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double beginning_qty {
                get {
                    try {
                        return ((double)(this[this.tableitems.beginning_qtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'beginning_qty\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.beginning_qtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double tolarge_packing {
                get {
                    try {
                        return ((double)(this[this.tableitems.tolarge_packingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tolarge_packing\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.tolarge_packingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tableitems.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double ucs {
                get {
                    try {
                        return ((double)(this[this.tableitems.ucsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ucs\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.ucsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int preferred_vendor_id {
                get {
                    try {
                        return ((int)(this[this.tableitems.preferred_vendor_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'preferred_vendor_id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.preferred_vendor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double vendor_discount {
                get {
                    try {
                        return ((double)(this[this.tableitems.vendor_discountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vendor_discount\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.vendor_discountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string purchase_description {
                get {
                    try {
                        return ((string)(this[this.tableitems.purchase_descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'purchase_description\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.purchase_descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double cost {
                get {
                    try {
                        return ((double)(this[this.tableitems.costColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cost\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.costColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short type {
                get {
                    try {
                        return ((short)(this[this.tableitems.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int unit_id {
                get {
                    try {
                        return ((int)(this[this.tableitems.unit_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unit_id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.unit_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int income_account_id {
                get {
                    try {
                        return ((int)(this[this.tableitems.income_account_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'income_account_id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.income_account_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int cogs_account_id {
                get {
                    try {
                        return ((int)(this[this.tableitems.cogs_account_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cogs_account_id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.cogs_account_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sales_tax_code_id {
                get {
                    try {
                        return ((int)(this[this.tableitems.sales_tax_code_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_tax_code_id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.sales_tax_code_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int asset_account_id {
                get {
                    try {
                        return ((int)(this[this.tableitems.asset_account_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'asset_account_id\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.asset_account_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double total_value {
                get {
                    try {
                        return ((double)(this[this.tableitems.total_valueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_value\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.total_valueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime value_as_of {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableitems.value_as_ofColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'value_as_of\' in table \'items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableitems.value_as_ofColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableitems.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableitems.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableitems.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableitems.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_descriptionNull() {
                return this.IsNull(this.tableitems.sales_descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_descriptionNull() {
                this[this.tableitems.sales_descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ison_handNull() {
                return this.IsNull(this.tableitems.on_handColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seton_handNull() {
                this[this.tableitems.on_handColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunit_measureNull() {
                return this.IsNull(this.tableitems.unit_measureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunit_measureNull() {
                this[this.tableitems.unit_measureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_priceNull() {
                return this.IsNull(this.tableitems.sales_priceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_priceNull() {
                this[this.tableitems.sales_priceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreorder_pointNull() {
                return this.IsNull(this.tableitems.reorder_pointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreorder_pointNull() {
                this[this.tableitems.reorder_pointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isoverstock_levelNull() {
                return this.IsNull(this.tableitems.overstock_levelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setoverstock_levelNull() {
                this[this.tableitems.overstock_levelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispart_numberNull() {
                return this.IsNull(this.tableitems.part_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpart_numberNull() {
                this[this.tableitems.part_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbeginning_qtyNull() {
                return this.IsNull(this.tableitems.beginning_qtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbeginning_qtyNull() {
                this[this.tableitems.beginning_qtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istolarge_packingNull() {
                return this.IsNull(this.tableitems.tolarge_packingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settolarge_packingNull() {
                this[this.tableitems.tolarge_packingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tableitems.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tableitems.inactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsucsNull() {
                return this.IsNull(this.tableitems.ucsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetucsNull() {
                this[this.tableitems.ucsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispreferred_vendor_idNull() {
                return this.IsNull(this.tableitems.preferred_vendor_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpreferred_vendor_idNull() {
                this[this.tableitems.preferred_vendor_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvendor_discountNull() {
                return this.IsNull(this.tableitems.vendor_discountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvendor_discountNull() {
                this[this.tableitems.vendor_discountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispurchase_descriptionNull() {
                return this.IsNull(this.tableitems.purchase_descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpurchase_descriptionNull() {
                this[this.tableitems.purchase_descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscostNull() {
                return this.IsNull(this.tableitems.costColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcostNull() {
                this[this.tableitems.costColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tableitems.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tableitems.typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isunit_idNull() {
                return this.IsNull(this.tableitems.unit_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setunit_idNull() {
                this[this.tableitems.unit_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isincome_account_idNull() {
                return this.IsNull(this.tableitems.income_account_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setincome_account_idNull() {
                this[this.tableitems.income_account_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscogs_account_idNull() {
                return this.IsNull(this.tableitems.cogs_account_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcogs_account_idNull() {
                this[this.tableitems.cogs_account_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_tax_code_idNull() {
                return this.IsNull(this.tableitems.sales_tax_code_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_tax_code_idNull() {
                this[this.tableitems.sales_tax_code_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isasset_account_idNull() {
                return this.IsNull(this.tableitems.asset_account_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setasset_account_idNull() {
                this[this.tableitems.asset_account_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_valueNull() {
                return this.IsNull(this.tableitems.total_valueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_valueNull() {
                this[this.tableitems.total_valueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvalue_as_ofNull() {
                return this.IsNull(this.tableitems.value_as_ofColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvalue_as_ofNull() {
                this[this.tableitems.value_as_ofColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class invoicesRow : global::System.Data.DataRow {
            
            private invoicesDataTable tableinvoices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal invoicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableinvoices = ((invoicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinvoices.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int customer_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.customer_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.customer_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ref_no {
                get {
                    try {
                        return ((string)(this[this.tableinvoices.ref_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ref_no\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.ref_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bill_to_address {
                get {
                    try {
                        return ((string)(this[this.tableinvoices.bill_to_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bill_to_address\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.bill_to_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ship_to_address {
                get {
                    try {
                        return ((string)(this[this.tableinvoices.ship_to_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ship_to_address\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.ship_to_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string po_no {
                get {
                    try {
                        return ((string)(this[this.tableinvoices.po_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'po_no\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.po_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int terms_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.terms_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'terms_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.terms_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sales_rep_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.sales_rep_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_rep_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.sales_rep_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime shipping_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinvoices.shipping_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shipping_date\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.shipping_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shipping_method_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.shipping_method_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shipping_method_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.shipping_method_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fob {
                get {
                    try {
                        return ((string)(this[this.tableinvoices.fobColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fob\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.fobColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int customer_message_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.customer_message_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'customer_message_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.customer_message_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int tax_item_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.tax_item_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tax_item_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.tax_item_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sales_tax_code_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.sales_tax_code_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sales_tax_code_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.sales_tax_code_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string memo {
                get {
                    try {
                        return ((string)(this[this.tableinvoices.memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'memo\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int created_by {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.created_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created_by\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.created_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime creation_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinvoices.creation_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'creation_date\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.creation_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int updated_by {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.updated_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updated_by\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.updated_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableinvoices.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'update_date\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short status {
                get {
                    try {
                        return ((short)(this[this.tableinvoices.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int account_id {
                get {
                    try {
                        return ((int)(this[this.tableinvoices.account_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_id\' in table \'invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableinvoices.account_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableinvoices.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableinvoices.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tableinvoices.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tableinvoices.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscustomer_idNull() {
                return this.IsNull(this.tableinvoices.customer_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcustomer_idNull() {
                this[this.tableinvoices.customer_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isref_noNull() {
                return this.IsNull(this.tableinvoices.ref_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setref_noNull() {
                this[this.tableinvoices.ref_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbill_to_addressNull() {
                return this.IsNull(this.tableinvoices.bill_to_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbill_to_addressNull() {
                this[this.tableinvoices.bill_to_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isship_to_addressNull() {
                return this.IsNull(this.tableinvoices.ship_to_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setship_to_addressNull() {
                this[this.tableinvoices.ship_to_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispo_noNull() {
                return this.IsNull(this.tableinvoices.po_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpo_noNull() {
                this[this.tableinvoices.po_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isterms_idNull() {
                return this.IsNull(this.tableinvoices.terms_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setterms_idNull() {
                this[this.tableinvoices.terms_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_rep_idNull() {
                return this.IsNull(this.tableinvoices.sales_rep_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_rep_idNull() {
                this[this.tableinvoices.sales_rep_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshipping_dateNull() {
                return this.IsNull(this.tableinvoices.shipping_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshipping_dateNull() {
                this[this.tableinvoices.shipping_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshipping_method_idNull() {
                return this.IsNull(this.tableinvoices.shipping_method_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshipping_method_idNull() {
                this[this.tableinvoices.shipping_method_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfobNull() {
                return this.IsNull(this.tableinvoices.fobColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfobNull() {
                this[this.tableinvoices.fobColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscustomer_message_idNull() {
                return this.IsNull(this.tableinvoices.customer_message_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcustomer_message_idNull() {
                this[this.tableinvoices.customer_message_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istax_item_idNull() {
                return this.IsNull(this.tableinvoices.tax_item_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settax_item_idNull() {
                this[this.tableinvoices.tax_item_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_tax_code_idNull() {
                return this.IsNull(this.tableinvoices.sales_tax_code_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_tax_code_idNull() {
                this[this.tableinvoices.sales_tax_code_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmemoNull() {
                return this.IsNull(this.tableinvoices.memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmemoNull() {
                this[this.tableinvoices.memoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreated_byNull() {
                return this.IsNull(this.tableinvoices.created_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreated_byNull() {
                this[this.tableinvoices.created_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreation_dateNull() {
                return this.IsNull(this.tableinvoices.creation_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreation_dateNull() {
                this[this.tableinvoices.creation_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdated_byNull() {
                return this.IsNull(this.tableinvoices.updated_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdated_byNull() {
                this[this.tableinvoices.updated_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableinvoices.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableinvoices.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tableinvoices.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tableinvoices.statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_idNull() {
                return this.IsNull(this.tableinvoices.account_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_idNull() {
                this[this.tableinvoices.account_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class termsRow : global::System.Data.DataRow {
            
            private termsDataTable tableterms;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal termsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableterms = ((termsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableterms.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'terms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterms.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableterms.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'terms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterms.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tableterms.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'terms\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableterms.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableterms.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableterms.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableterms.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableterms.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tableterms.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tableterms.inactiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class employeesRow : global::System.Data.DataRow {
            
            private employeesDataTable tableemployees;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal employeesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableemployees = ((employeesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_name {
                get {
                    try {
                        return ((string)(this[this.tableemployees.last_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_name\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tableemployees.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string middle_name {
                get {
                    try {
                        return ((string)(this[this.tableemployees.middle_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'middle_name\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.middle_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string street1 {
                get {
                    try {
                        return ((string)(this[this.tableemployees.street1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'street1\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.street1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short gender {
                get {
                    try {
                        return ((short)(this[this.tableemployees.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_of_birth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployees.date_of_birthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_of_birth\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.date_of_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short marital_status {
                get {
                    try {
                        return ((short)(this[this.tableemployees.marital_statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'marital_status\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.marital_statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableemployees.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string religion {
                get {
                    try {
                        return ((string)(this[this.tableemployees.religionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'religion\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.religionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zip {
                get {
                    try {
                        return ((string)(this[this.tableemployees.zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zip\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_hired {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployees.date_hiredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_hired\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.date_hiredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_resigned {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableemployees.date_resignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_resigned\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.date_resignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string school {
                get {
                    try {
                        return ((string)(this[this.tableemployees.schoolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'school\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.schoolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string course {
                get {
                    try {
                        return ((string)(this[this.tableemployees.courseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'course\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.courseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableemployees.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int branch_id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.branch_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'branch_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.branch_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int department_id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.department_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'department_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.department_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_no {
                get {
                    try {
                        return ((string)(this[this.tableemployees.account_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_no\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.account_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string stat_code {
                get {
                    try {
                        return ((string)(this[this.tableemployees.stat_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stat_code\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.stat_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shift_id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.shift_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shift_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.shift_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string hdmf {
                get {
                    try {
                        return ((string)(this[this.tableemployees.hdmfColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hdmf\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.hdmfColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ss_no {
                get {
                    try {
                        return ((string)(this[this.tableemployees.ss_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ss_no\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ss_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string tin {
                get {
                    try {
                        return ((string)(this[this.tableemployees.tinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'tin\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.tinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string philhealth {
                get {
                    try {
                        return ((string)(this[this.tableemployees.philhealthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'philhealth\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.philhealthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int bracket_id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.bracket_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bracket_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.bracket_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_hdmf15th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_hdmf15thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_hdmf15th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_hdmf15thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_sss15th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_sss15thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_sss15th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_sss15thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_tax15th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_tax15thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_tax15th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_tax15thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_philhealth15th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_philhealth15thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_philhealth15th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_philhealth15thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_hdmf30th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_hdmf30thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_hdmf30th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_hdmf30thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_sss30th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_sss30thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_sss30th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_sss30thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_tax30th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_tax30thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_tax30th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_tax30thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ded_philhealth30th {
                get {
                    try {
                        return ((short)(this[this.tableemployees.ded_philhealth30thColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ded_philhealth30th\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.ded_philhealth30thColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string atm {
                get {
                    try {
                        return ((string)(this[this.tableemployees.atmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'atm\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.atmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double seniority_pay {
                get {
                    try {
                        return ((double)(this[this.tableemployees.seniority_payColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'seniority_pay\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.seniority_payColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double pay_rate {
                get {
                    try {
                        return ((double)(this[this.tableemployees.pay_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pay_rate\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.pay_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double vl_allow {
                get {
                    try {
                        return ((double)(this[this.tableemployees.vl_allowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vl_allow\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.vl_allowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double sl_allow {
                get {
                    try {
                        return ((double)(this[this.tableemployees.sl_allowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sl_allow\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.sl_allowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] image {
                get {
                    try {
                        return ((byte[])(this[this.tableemployees.imageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'image\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.imageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tableemployees.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] fingerprint_sig {
                get {
                    try {
                        return ((byte[])(this[this.tableemployees.fingerprint_sigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fingerprint_sig\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.fingerprint_sigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short log_exemption {
                get {
                    try {
                        return ((short)(this[this.tableemployees.log_exemptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'log_exemption\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.log_exemptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double salary {
                get {
                    try {
                        return ((double)(this[this.tableemployees.salaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'salary\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.salaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double monthly_rate {
                get {
                    try {
                        return ((double)(this[this.tableemployees.monthly_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monthly_rate\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.monthly_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double daily_rate {
                get {
                    try {
                        return ((double)(this[this.tableemployees.daily_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'daily_rate\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.daily_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double hourly_rate {
                get {
                    try {
                        return ((double)(this[this.tableemployees.hourly_rateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hourly_rate\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.hourly_rateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int position_id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.position_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.position_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string emp_id {
                get {
                    try {
                        return ((string)(this[this.tableemployees.emp_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'emp_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.emp_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    try {
                        return ((string)(this[this.tableemployees.titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'title\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string print_on_check_as {
                get {
                    try {
                        return ((string)(this[this.tableemployees.print_on_check_asColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'print_on_check_as\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.print_on_check_asColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string street2 {
                get {
                    try {
                        return ((string)(this[this.tableemployees.street2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'street2\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.street2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableemployees.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int state_id {
                get {
                    try {
                        return ((int)(this[this.tableemployees.state_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state_id\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.state_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cellular {
                get {
                    try {
                        return ((string)(this[this.tableemployees.cellularColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cellular\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.cellularColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableemployees.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'employees\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableemployees.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableemployees.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableemployees.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_nameNull() {
                return this.IsNull(this.tableemployees.last_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_nameNull() {
                this[this.tableemployees.last_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tableemployees.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tableemployees.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismiddle_nameNull() {
                return this.IsNull(this.tableemployees.middle_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmiddle_nameNull() {
                this[this.tableemployees.middle_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstreet1Null() {
                return this.IsNull(this.tableemployees.street1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstreet1Null() {
                this[this.tableemployees.street1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableemployees.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableemployees.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_of_birthNull() {
                return this.IsNull(this.tableemployees.date_of_birthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_of_birthNull() {
                this[this.tableemployees.date_of_birthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismarital_statusNull() {
                return this.IsNull(this.tableemployees.marital_statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmarital_statusNull() {
                this[this.tableemployees.marital_statusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableemployees.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableemployees.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreligionNull() {
                return this.IsNull(this.tableemployees.religionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreligionNull() {
                this[this.tableemployees.religionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszipNull() {
                return this.IsNull(this.tableemployees.zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzipNull() {
                this[this.tableemployees.zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_hiredNull() {
                return this.IsNull(this.tableemployees.date_hiredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_hiredNull() {
                this[this.tableemployees.date_hiredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_resignedNull() {
                return this.IsNull(this.tableemployees.date_resignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_resignedNull() {
                this[this.tableemployees.date_resignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsschoolNull() {
                return this.IsNull(this.tableemployees.schoolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetschoolNull() {
                this[this.tableemployees.schoolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscourseNull() {
                return this.IsNull(this.tableemployees.courseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcourseNull() {
                this[this.tableemployees.courseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableemployees.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableemployees.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbranch_idNull() {
                return this.IsNull(this.tableemployees.branch_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbranch_idNull() {
                this[this.tableemployees.branch_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_idNull() {
                return this.IsNull(this.tableemployees.department_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_idNull() {
                this[this.tableemployees.department_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_noNull() {
                return this.IsNull(this.tableemployees.account_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_noNull() {
                this[this.tableemployees.account_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstat_codeNull() {
                return this.IsNull(this.tableemployees.stat_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstat_codeNull() {
                this[this.tableemployees.stat_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshift_idNull() {
                return this.IsNull(this.tableemployees.shift_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshift_idNull() {
                this[this.tableemployees.shift_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IshdmfNull() {
                return this.IsNull(this.tableemployees.hdmfColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SethdmfNull() {
                this[this.tableemployees.hdmfColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isss_noNull() {
                return this.IsNull(this.tableemployees.ss_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setss_noNull() {
                this[this.tableemployees.ss_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstinNull() {
                return this.IsNull(this.tableemployees.tinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettinNull() {
                this[this.tableemployees.tinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphilhealthNull() {
                return this.IsNull(this.tableemployees.philhealthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphilhealthNull() {
                this[this.tableemployees.philhealthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbracket_idNull() {
                return this.IsNull(this.tableemployees.bracket_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbracket_idNull() {
                this[this.tableemployees.bracket_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_hdmf15thNull() {
                return this.IsNull(this.tableemployees.ded_hdmf15thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_hdmf15thNull() {
                this[this.tableemployees.ded_hdmf15thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_sss15thNull() {
                return this.IsNull(this.tableemployees.ded_sss15thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_sss15thNull() {
                this[this.tableemployees.ded_sss15thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_tax15thNull() {
                return this.IsNull(this.tableemployees.ded_tax15thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_tax15thNull() {
                this[this.tableemployees.ded_tax15thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_philhealth15thNull() {
                return this.IsNull(this.tableemployees.ded_philhealth15thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_philhealth15thNull() {
                this[this.tableemployees.ded_philhealth15thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_hdmf30thNull() {
                return this.IsNull(this.tableemployees.ded_hdmf30thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_hdmf30thNull() {
                this[this.tableemployees.ded_hdmf30thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_sss30thNull() {
                return this.IsNull(this.tableemployees.ded_sss30thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_sss30thNull() {
                this[this.tableemployees.ded_sss30thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_tax30thNull() {
                return this.IsNull(this.tableemployees.ded_tax30thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_tax30thNull() {
                this[this.tableemployees.ded_tax30thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isded_philhealth30thNull() {
                return this.IsNull(this.tableemployees.ded_philhealth30thColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setded_philhealth30thNull() {
                this[this.tableemployees.ded_philhealth30thColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsatmNull() {
                return this.IsNull(this.tableemployees.atmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetatmNull() {
                this[this.tableemployees.atmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isseniority_payNull() {
                return this.IsNull(this.tableemployees.seniority_payColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setseniority_payNull() {
                this[this.tableemployees.seniority_payColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispay_rateNull() {
                return this.IsNull(this.tableemployees.pay_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpay_rateNull() {
                this[this.tableemployees.pay_rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvl_allowNull() {
                return this.IsNull(this.tableemployees.vl_allowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvl_allowNull() {
                this[this.tableemployees.vl_allowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issl_allowNull() {
                return this.IsNull(this.tableemployees.sl_allowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsl_allowNull() {
                this[this.tableemployees.sl_allowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageNull() {
                return this.IsNull(this.tableemployees.imageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageNull() {
                this[this.tableemployees.imageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tableemployees.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tableemployees.inactiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfingerprint_sigNull() {
                return this.IsNull(this.tableemployees.fingerprint_sigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfingerprint_sigNull() {
                this[this.tableemployees.fingerprint_sigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islog_exemptionNull() {
                return this.IsNull(this.tableemployees.log_exemptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlog_exemptionNull() {
                this[this.tableemployees.log_exemptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IssalaryNull() {
                return this.IsNull(this.tableemployees.salaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetsalaryNull() {
                this[this.tableemployees.salaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismonthly_rateNull() {
                return this.IsNull(this.tableemployees.monthly_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmonthly_rateNull() {
                this[this.tableemployees.monthly_rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdaily_rateNull() {
                return this.IsNull(this.tableemployees.daily_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdaily_rateNull() {
                this[this.tableemployees.daily_rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishourly_rateNull() {
                return this.IsNull(this.tableemployees.hourly_rateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethourly_rateNull() {
                this[this.tableemployees.hourly_rateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isposition_idNull() {
                return this.IsNull(this.tableemployees.position_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setposition_idNull() {
                this[this.tableemployees.position_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemp_idNull() {
                return this.IsNull(this.tableemployees.emp_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemp_idNull() {
                this[this.tableemployees.emp_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstitleNull() {
                return this.IsNull(this.tableemployees.titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettitleNull() {
                this[this.tableemployees.titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprint_on_check_asNull() {
                return this.IsNull(this.tableemployees.print_on_check_asColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprint_on_check_asNull() {
                this[this.tableemployees.print_on_check_asColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstreet2Null() {
                return this.IsNull(this.tableemployees.street2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstreet2Null() {
                this[this.tableemployees.street2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tableemployees.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tableemployees.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isstate_idNull() {
                return this.IsNull(this.tableemployees.state_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setstate_idNull() {
                this[this.tableemployees.state_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscellularNull() {
                return this.IsNull(this.tableemployees.cellularColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcellularNull() {
                this[this.tableemployees.cellularColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableemployees.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableemployees.emailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class purchase_ordersRow : global::System.Data.DataRow {
            
            private purchase_ordersDataTable tablepurchase_orders;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal purchase_ordersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepurchase_orders = ((purchase_ordersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tablepurchase_orders.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepurchase_orders.dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vendor_id {
                get {
                    try {
                        return ((int)(this[this.tablepurchase_orders.vendor_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vendor_id\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.vendor_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string prepared_by {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.prepared_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'prepared_by\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.prepared_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string approved_by {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.approved_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'approved_by\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.approved_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reference_no {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.reference_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reference_no\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.reference_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int created_by {
                get {
                    try {
                        return ((int)(this[this.tablepurchase_orders.created_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created_by\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.created_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime creation_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepurchase_orders.creation_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'creation_date\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.creation_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int updated_by {
                get {
                    try {
                        return ((int)(this[this.tablepurchase_orders.updated_byColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updated_by\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.updated_byColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablepurchase_orders.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'update_date\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string po_no {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.po_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'po_no\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.po_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ship_to_address {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.ship_to_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ship_to_address\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.ship_to_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vendor_address {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.vendor_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vendor_address\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.vendor_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vendor_message {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.vendor_messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vendor_message\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.vendor_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string memo {
                get {
                    try {
                        return ((string)(this[this.tablepurchase_orders.memoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'memo\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.memoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short status {
                get {
                    try {
                        return ((short)(this[this.tablepurchase_orders.statusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'status\' in table \'purchase_orders\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepurchase_orders.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablepurchase_orders.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablepurchase_orders.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateNull() {
                return this.IsNull(this.tablepurchase_orders.dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateNull() {
                this[this.tablepurchase_orders.dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvendor_idNull() {
                return this.IsNull(this.tablepurchase_orders.vendor_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvendor_idNull() {
                this[this.tablepurchase_orders.vendor_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprepared_byNull() {
                return this.IsNull(this.tablepurchase_orders.prepared_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprepared_byNull() {
                this[this.tablepurchase_orders.prepared_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapproved_byNull() {
                return this.IsNull(this.tablepurchase_orders.approved_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapproved_byNull() {
                this[this.tablepurchase_orders.approved_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isreference_noNull() {
                return this.IsNull(this.tablepurchase_orders.reference_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setreference_noNull() {
                this[this.tablepurchase_orders.reference_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreated_byNull() {
                return this.IsNull(this.tablepurchase_orders.created_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreated_byNull() {
                this[this.tablepurchase_orders.created_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreation_dateNull() {
                return this.IsNull(this.tablepurchase_orders.creation_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreation_dateNull() {
                this[this.tablepurchase_orders.creation_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdated_byNull() {
                return this.IsNull(this.tablepurchase_orders.updated_byColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdated_byNull() {
                this[this.tablepurchase_orders.updated_byColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tablepurchase_orders.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tablepurchase_orders.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispo_noNull() {
                return this.IsNull(this.tablepurchase_orders.po_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpo_noNull() {
                this[this.tablepurchase_orders.po_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isship_to_addressNull() {
                return this.IsNull(this.tablepurchase_orders.ship_to_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setship_to_addressNull() {
                this[this.tablepurchase_orders.ship_to_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvendor_addressNull() {
                return this.IsNull(this.tablepurchase_orders.vendor_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvendor_addressNull() {
                this[this.tablepurchase_orders.vendor_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvendor_messageNull() {
                return this.IsNull(this.tablepurchase_orders.vendor_messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvendor_messageNull() {
                this[this.tablepurchase_orders.vendor_messageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmemoNull() {
                return this.IsNull(this.tablepurchase_orders.memoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmemoNull() {
                this[this.tablepurchase_orders.memoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatusNull() {
                return this.IsNull(this.tablepurchase_orders.statusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatusNull() {
                this[this.tablepurchase_orders.statusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class other_namesRow : global::System.Data.DataRow {
            
            private other_namesDataTable tableother_names;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal other_namesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableother_names = ((other_namesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tableother_names.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableother_names.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tableother_names.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string title {
                get {
                    try {
                        return ((string)(this[this.tableother_names.titleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'title\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.titleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tableother_names.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string middle_name {
                get {
                    try {
                        return ((string)(this[this.tableother_names.middle_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'middle_name\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.middle_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_name {
                get {
                    try {
                        return ((string)(this[this.tableother_names.last_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_name\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableother_names.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string contact {
                get {
                    try {
                        return ((string)(this[this.tableother_names.contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contact\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableother_names.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tableother_names.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alt_phone {
                get {
                    try {
                        return ((string)(this[this.tableother_names.alt_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alt_phone\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.alt_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string alt_contact {
                get {
                    try {
                        return ((string)(this[this.tableother_names.alt_contactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'alt_contact\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.alt_contactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableother_names.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account_no {
                get {
                    try {
                        return ((string)(this[this.tableother_names.account_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'account_no\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.account_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tableother_names.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'other_names\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableother_names.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableother_names.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableother_names.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableother_names.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableother_names.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tableother_names.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tableother_names.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstitleNull() {
                return this.IsNull(this.tableother_names.titleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettitleNull() {
                this[this.tableother_names.titleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tableother_names.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tableother_names.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismiddle_nameNull() {
                return this.IsNull(this.tableother_names.middle_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmiddle_nameNull() {
                this[this.tableother_names.middle_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_nameNull() {
                return this.IsNull(this.tableother_names.last_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_nameNull() {
                this[this.tableother_names.last_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsaddressNull() {
                return this.IsNull(this.tableother_names.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetaddressNull() {
                this[this.tableother_names.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactNull() {
                return this.IsNull(this.tableother_names.contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactNull() {
                this[this.tableother_names.contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableother_names.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableother_names.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tableother_names.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tableother_names.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalt_phoneNull() {
                return this.IsNull(this.tableother_names.alt_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalt_phoneNull() {
                this[this.tableother_names.alt_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isalt_contactNull() {
                return this.IsNull(this.tableother_names.alt_contactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setalt_contactNull() {
                this[this.tableother_names.alt_contactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableother_names.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableother_names.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaccount_noNull() {
                return this.IsNull(this.tableother_names.account_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaccount_noNull() {
                this[this.tableother_names.account_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tableother_names.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tableother_names.inactiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class payroll_itemsRow : global::System.Data.DataRow {
            
            private payroll_itemsDataTable tablepayroll_items;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal payroll_itemsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepayroll_items = ((payroll_itemsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    try {
                        return ((int)(this[this.tablepayroll_items.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'id\' in table \'payroll_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayroll_items.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tablepayroll_items.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'payroll_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayroll_items.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short inactive {
                get {
                    try {
                        return ((short)(this[this.tablepayroll_items.inactiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inactive\' in table \'payroll_items\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepayroll_items.inactiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tablepayroll_items.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tablepayroll_items.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tablepayroll_items.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tablepayroll_items.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsinactiveNull() {
                return this.IsNull(this.tablepayroll_items.inactiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetinactiveNull() {
                this[this.tablepayroll_items.inactiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class customersRowChangeEvent : global::System.EventArgs {
            
            private customersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public customersRowChangeEvent(customersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public customersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class vendorsRowChangeEvent : global::System.EventArgs {
            
            private vendorsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendorsRowChangeEvent(vendorsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public vendorsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class companyRowChangeEvent : global::System.EventArgs {
            
            private companyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public companyRowChangeEvent(companyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public companyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class accountsRowChangeEvent : global::System.EventArgs {
            
            private accountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accountsRowChangeEvent(accountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public accountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class itemsRowChangeEvent : global::System.EventArgs {
            
            private itemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itemsRowChangeEvent(itemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public itemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class invoicesRowChangeEvent : global::System.EventArgs {
            
            private invoicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public invoicesRowChangeEvent(invoicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public invoicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class termsRowChangeEvent : global::System.EventArgs {
            
            private termsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public termsRowChangeEvent(termsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public termsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class employeesRowChangeEvent : global::System.EventArgs {
            
            private employeesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeesRowChangeEvent(employeesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public employeesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class purchase_ordersRowChangeEvent : global::System.EventArgs {
            
            private purchase_ordersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchase_ordersRowChangeEvent(purchase_ordersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public purchase_ordersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class other_namesRowChangeEvent : global::System.EventArgs {
            
            private other_namesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public other_namesRowChangeEvent(other_namesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public other_namesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class payroll_itemsRowChangeEvent : global::System.EventArgs {
            
            private payroll_itemsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public payroll_itemsRowChangeEvent(payroll_itemsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public payroll_itemsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace NBooks.Reports.DataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class customersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public customersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "customers";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("trade_assistance", "trade_assistance");
            tableMapping.ColumnMappings.Add("classification", "classification");
            tableMapping.ColumnMappings.Add("type_of_deal", "type_of_deal");
            tableMapping.ColumnMappings.Add("balance", "balance");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            tableMapping.ColumnMappings.Add("balance_as_of", "balance_as_of");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("first_name", "first_name");
            tableMapping.ColumnMappings.Add("last_name", "last_name");
            tableMapping.ColumnMappings.Add("middle_name", "middle_name");
            tableMapping.ColumnMappings.Add("ship_to_address", "ship_to_address");
            tableMapping.ColumnMappings.Add("contact", "contact");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("alt_phone", "alt_phone");
            tableMapping.ColumnMappings.Add("alt_contact", "alt_contact");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("cc", "cc");
            tableMapping.ColumnMappings.Add("customer_type_id", "customer_type_id");
            tableMapping.ColumnMappings.Add("terms_id", "terms_id");
            tableMapping.ColumnMappings.Add("sales_rep_id", "sales_rep_id");
            tableMapping.ColumnMappings.Add("send_method", "send_method");
            tableMapping.ColumnMappings.Add("sales_tax_code_id", "sales_tax_code_id");
            tableMapping.ColumnMappings.Add("tax_item_id", "tax_item_id");
            tableMapping.ColumnMappings.Add("resale_number", "resale_number");
            tableMapping.ColumnMappings.Add("price_level_id", "price_level_id");
            tableMapping.ColumnMappings.Add("account_no", "account_no");
            tableMapping.ColumnMappings.Add("credit_limit", "credit_limit");
            tableMapping.ColumnMappings.Add("payment_method_id", "payment_method_id");
            tableMapping.ColumnMappings.Add("credit_card_no", "credit_card_no");
            tableMapping.ColumnMappings.Add("cc_expiry_month", "cc_expiry_month");
            tableMapping.ColumnMappings.Add("cc_expiry_year", "cc_expiry_year");
            tableMapping.ColumnMappings.Add("name_on_card", "name_on_card");
            tableMapping.ColumnMappings.Add("cc_address", "cc_address");
            tableMapping.ColumnMappings.Add("cc_zip_code", "cc_zip_code");
            tableMapping.ColumnMappings.Add("job_status", "job_status");
            tableMapping.ColumnMappings.Add("start_date", "start_date");
            tableMapping.ColumnMappings.Add("projected_end", "projected_end");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            tableMapping.ColumnMappings.Add("job_description", "job_description");
            tableMapping.ColumnMappings.Add("job_type_id", "job_type_id");
            tableMapping.ColumnMappings.Add("notes", "notes");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `customers`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.customersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.customersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.customersDataTable dataTable = new DataSet.customersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class vendorsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public vendorsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "vendors";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            tableMapping.ColumnMappings.Add("balance", "balance");
            tableMapping.ColumnMappings.Add("contact", "contact");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `vendors`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.vendorsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.vendorsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.vendorsDataTable dataTable = new DataSet.vendorsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class companyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public companyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "company";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("ship_to_name", "ship_to_name");
            tableMapping.ColumnMappings.Add("ship_to_address", "ship_to_address");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("website", "website");
            tableMapping.ColumnMappings.Add("legal_name", "legal_name");
            tableMapping.ColumnMappings.Add("legal_address", "legal_address");
            tableMapping.ColumnMappings.Add("legal_address1", "legal_address1");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("state_id", "state_id");
            tableMapping.ColumnMappings.Add("zip", "zip");
            tableMapping.ColumnMappings.Add("legal_country_id", "legal_country_id");
            tableMapping.ColumnMappings.Add("country_id", "country_id");
            tableMapping.ColumnMappings.Add("fiscal_year", "fiscal_year");
            tableMapping.ColumnMappings.Add("tax_year", "tax_year");
            tableMapping.ColumnMappings.Add("income_tax_form", "income_tax_form");
            tableMapping.ColumnMappings.Add("ein", "ein");
            tableMapping.ColumnMappings.Add("ssn", "ssn");
            tableMapping.ColumnMappings.Add("payroll_contact", "payroll_contact");
            tableMapping.ColumnMappings.Add("payroll_contact_title", "payroll_contact_title");
            tableMapping.ColumnMappings.Add("payroll_contact_phone", "payroll_contact_phone");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `company`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.companyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.companyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.companyDataTable dataTable = new DataSet.companyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class accountsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public accountsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "accounts";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("note", "note");
            tableMapping.ColumnMappings.Add("balance", "balance");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("tax_line_mapping", "tax_line_mapping");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `accounts`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.accountsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.accountsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.accountsDataTable dataTable = new DataSet.accountsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class itemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public itemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "items";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("sales_description", "sales_description");
            tableMapping.ColumnMappings.Add("on_hand", "on_hand");
            tableMapping.ColumnMappings.Add("unit_measure", "unit_measure");
            tableMapping.ColumnMappings.Add("sales_price", "sales_price");
            tableMapping.ColumnMappings.Add("reorder_point", "reorder_point");
            tableMapping.ColumnMappings.Add("overstock_level", "overstock_level");
            tableMapping.ColumnMappings.Add("part_number", "part_number");
            tableMapping.ColumnMappings.Add("beginning_qty", "beginning_qty");
            tableMapping.ColumnMappings.Add("tolarge_packing", "tolarge_packing");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            tableMapping.ColumnMappings.Add("ucs", "ucs");
            tableMapping.ColumnMappings.Add("preferred_vendor_id", "preferred_vendor_id");
            tableMapping.ColumnMappings.Add("vendor_discount", "vendor_discount");
            tableMapping.ColumnMappings.Add("purchase_description", "purchase_description");
            tableMapping.ColumnMappings.Add("cost", "cost");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("unit_id", "unit_id");
            tableMapping.ColumnMappings.Add("income_account_id", "income_account_id");
            tableMapping.ColumnMappings.Add("cogs_account_id", "cogs_account_id");
            tableMapping.ColumnMappings.Add("sales_tax_code_id", "sales_tax_code_id");
            tableMapping.ColumnMappings.Add("asset_account_id", "asset_account_id");
            tableMapping.ColumnMappings.Add("total_value", "total_value");
            tableMapping.ColumnMappings.Add("value_as_of", "value_as_of");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `items`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.itemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.itemsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.itemsDataTable dataTable = new DataSet.itemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class invoicesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public invoicesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "invoices";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("date", "date");
            tableMapping.ColumnMappings.Add("customer_id", "customer_id");
            tableMapping.ColumnMappings.Add("ref_no", "ref_no");
            tableMapping.ColumnMappings.Add("bill_to_address", "bill_to_address");
            tableMapping.ColumnMappings.Add("ship_to_address", "ship_to_address");
            tableMapping.ColumnMappings.Add("po_no", "po_no");
            tableMapping.ColumnMappings.Add("terms_id", "terms_id");
            tableMapping.ColumnMappings.Add("sales_rep_id", "sales_rep_id");
            tableMapping.ColumnMappings.Add("shipping_date", "shipping_date");
            tableMapping.ColumnMappings.Add("shipping_method_id", "shipping_method_id");
            tableMapping.ColumnMappings.Add("fob", "fob");
            tableMapping.ColumnMappings.Add("customer_message_id", "customer_message_id");
            tableMapping.ColumnMappings.Add("tax_item_id", "tax_item_id");
            tableMapping.ColumnMappings.Add("sales_tax_code_id", "sales_tax_code_id");
            tableMapping.ColumnMappings.Add("memo", "memo");
            tableMapping.ColumnMappings.Add("created_by", "created_by");
            tableMapping.ColumnMappings.Add("creation_date", "creation_date");
            tableMapping.ColumnMappings.Add("updated_by", "updated_by");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("account_id", "account_id");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `invoices`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.invoicesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.invoicesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.invoicesDataTable dataTable = new DataSet.invoicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class termsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public termsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "terms";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `terms`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.termsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.termsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.termsDataTable dataTable = new DataSet.termsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class employeesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public employeesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "employees";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("last_name", "last_name");
            tableMapping.ColumnMappings.Add("first_name", "first_name");
            tableMapping.ColumnMappings.Add("middle_name", "middle_name");
            tableMapping.ColumnMappings.Add("street1", "street1");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("date_of_birth", "date_of_birth");
            tableMapping.ColumnMappings.Add("marital_status", "marital_status");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("religion", "religion");
            tableMapping.ColumnMappings.Add("zip", "zip");
            tableMapping.ColumnMappings.Add("date_hired", "date_hired");
            tableMapping.ColumnMappings.Add("date_resigned", "date_resigned");
            tableMapping.ColumnMappings.Add("school", "school");
            tableMapping.ColumnMappings.Add("course", "course");
            tableMapping.ColumnMappings.Add("contact", "contact");
            tableMapping.ColumnMappings.Add("branch_id", "branch_id");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("account_no", "account_no");
            tableMapping.ColumnMappings.Add("stat_code", "stat_code");
            tableMapping.ColumnMappings.Add("shift_id", "shift_id");
            tableMapping.ColumnMappings.Add("hdmf", "hdmf");
            tableMapping.ColumnMappings.Add("ss_no", "ss_no");
            tableMapping.ColumnMappings.Add("tin", "tin");
            tableMapping.ColumnMappings.Add("philhealth", "philhealth");
            tableMapping.ColumnMappings.Add("bracket_id", "bracket_id");
            tableMapping.ColumnMappings.Add("ded_hdmf15th", "ded_hdmf15th");
            tableMapping.ColumnMappings.Add("ded_sss15th", "ded_sss15th");
            tableMapping.ColumnMappings.Add("ded_tax15th", "ded_tax15th");
            tableMapping.ColumnMappings.Add("ded_philhealth15th", "ded_philhealth15th");
            tableMapping.ColumnMappings.Add("ded_hdmf30th", "ded_hdmf30th");
            tableMapping.ColumnMappings.Add("ded_sss30th", "ded_sss30th");
            tableMapping.ColumnMappings.Add("ded_tax30th", "ded_tax30th");
            tableMapping.ColumnMappings.Add("ded_philhealth30th", "ded_philhealth30th");
            tableMapping.ColumnMappings.Add("atm", "atm");
            tableMapping.ColumnMappings.Add("seniority_pay", "seniority_pay");
            tableMapping.ColumnMappings.Add("pay_rate", "pay_rate");
            tableMapping.ColumnMappings.Add("vl_allow", "vl_allow");
            tableMapping.ColumnMappings.Add("sl_allow", "sl_allow");
            tableMapping.ColumnMappings.Add("image", "image");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            tableMapping.ColumnMappings.Add("fingerprint_sig", "fingerprint_sig");
            tableMapping.ColumnMappings.Add("log_exemption", "log_exemption");
            tableMapping.ColumnMappings.Add("salary", "salary");
            tableMapping.ColumnMappings.Add("monthly_rate", "monthly_rate");
            tableMapping.ColumnMappings.Add("daily_rate", "daily_rate");
            tableMapping.ColumnMappings.Add("hourly_rate", "hourly_rate");
            tableMapping.ColumnMappings.Add("position_id", "position_id");
            tableMapping.ColumnMappings.Add("emp_id", "emp_id");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("print_on_check_as", "print_on_check_as");
            tableMapping.ColumnMappings.Add("street2", "street2");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("state_id", "state_id");
            tableMapping.ColumnMappings.Add("cellular", "cellular");
            tableMapping.ColumnMappings.Add("email", "email");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `employees`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.employeesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.employeesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.employeesDataTable dataTable = new DataSet.employeesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class purchase_ordersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public purchase_ordersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "purchase_orders";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("date", "date");
            tableMapping.ColumnMappings.Add("vendor_id", "vendor_id");
            tableMapping.ColumnMappings.Add("prepared_by", "prepared_by");
            tableMapping.ColumnMappings.Add("approved_by", "approved_by");
            tableMapping.ColumnMappings.Add("reference_no", "reference_no");
            tableMapping.ColumnMappings.Add("created_by", "created_by");
            tableMapping.ColumnMappings.Add("creation_date", "creation_date");
            tableMapping.ColumnMappings.Add("updated_by", "updated_by");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("po_no", "po_no");
            tableMapping.ColumnMappings.Add("ship_to_address", "ship_to_address");
            tableMapping.ColumnMappings.Add("vendor_address", "vendor_address");
            tableMapping.ColumnMappings.Add("vendor_message", "vendor_message");
            tableMapping.ColumnMappings.Add("memo", "memo");
            tableMapping.ColumnMappings.Add("status", "status");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `purchase_orders`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.purchase_ordersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.purchase_ordersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.purchase_ordersDataTable dataTable = new DataSet.purchase_ordersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class other_namesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public other_namesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "other_names";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            tableMapping.ColumnMappings.Add("title", "title");
            tableMapping.ColumnMappings.Add("first_name", "first_name");
            tableMapping.ColumnMappings.Add("middle_name", "middle_name");
            tableMapping.ColumnMappings.Add("last_name", "last_name");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("contact", "contact");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("alt_phone", "alt_phone");
            tableMapping.ColumnMappings.Add("alt_contact", "alt_contact");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("account_no", "account_no");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `other_names`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.other_namesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.other_namesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.other_namesDataTable dataTable = new DataSet.other_namesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class payroll_itemsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public payroll_itemsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "payroll_items";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("inactive", "inactive");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::NBooks.Reports.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM `payroll_items`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet.payroll_itemsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet.payroll_itemsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet.payroll_itemsDataTable dataTable = new DataSet.payroll_itemsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591